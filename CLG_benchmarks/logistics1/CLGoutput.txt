REGISTER (entering): main()
cf2cs v 2.1 -- A compiler for contingent planning problems into classical models.
CALL: ./cf2cs -sn -t0 -cond -cod -cmr -csl -ckit -ckinl -cminl -cmit -cdisjk0 -cdisjm0 -mac -cfc -fp benchmarks/logistics1/d.pddl benchmarks/logistics1/p.pddl
-sn
-t0
-cond
-cod
-cmr
-csl
-ckit
-ckinl
-cminl
-cmit
-cdisjk0
-cdisjm0
-mac
-cfc
-fp
benchmarks/logistics1/d.pddl
benchmarks/logistics1/p.pddl
Using only initial disjunctions for merge
Clousuring for obtaining possible tags
Full cancellation: Translating deletes properly. Maybe complete if '-s0' or '-f' option was used
Propagating ramifications in effects
Using action compilation + merge
Merging only goals and preconditions
REGISTER (entering): parse()
predicates size = 1 for name = AT_TL
predicates size = 2 for name = AT_TA
predicates size = 3 for name = AT_AA
predicates size = 4 for name = AT_OL
predicates size = 5 for name = AT_OA
predicates size = 6 for name = IN_OT
predicates size = 7 for name = IN_OA
predicates size = 8 for name = IN_CITY_L
predicates size = 9 for name = IN_CITY_A
predicates size = 10 for name = IN_CITY_T
Parsed: benchmarks/logistics1/d.pddl
Parsed: benchmarks/logistics1/p.pddl
REGISTER: parse() took 0.00086 secs
REGISTER (entering): initialize()
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
parser(generateVarsAndValues): using types without :typing requirements.
REGISTER (entering): computeReachableAtoms()
schema 0 de 12
schema 1 de 12
schema 2 de 12
schema 3 de 12
schema 4 de 12
schema 5 de 12
schema 6 de 12
schema 7 de 12
schema 8 de 12
schema 9 de 12
schema 10 de 12
schema 11 de 12
schema 0 de 12
schema 1 de 12
schema 2 de 12
schema 3 de 12
schema 4 de 12
schema 5 de 12
schema 6 de 12
schema 7 de 12
schema 8 de 12
schema 9 de 12
schema 10 de 12
schema 11 de 12
schema 0 de 12
schema 1 de 12
schema 2 de 12
schema 3 de 12
schema 4 de 12
schema 5 de 12
schema 6 de 12
schema 7 de 12
schema 8 de 12
schema 9 de 12
schema 10 de 12
schema 11 de 12
REGISTER: computeReachableAtoms() took 0.003587 secs
GENERAL: number of atoms = 29
GENERAL: number of reachable atoms = 19
GENERAL: number of grounded operators = 24
REGISTER: initialize() took 0.003744 secs
REGISTER (entering): initInstanceDB()
Unknown atoms: 2
Simply unknown atoms: 0
Known atoms: 25
True literals (after unit resolution): 17
Oneof (0): 2
Or (0): 2
Or (1): 2

---- end uncertainty: 
Reachable 19
GENERAL: number of actions = 18
REGISTER: initInstanceDB() took 6.17504e-11 secs
Generating PDDL for contingent heuristic
Objects: AIRPLANE1 BOS BOS_AIRPORT BOS_PO BOS_TRUCK PACKAGE1 PGH PGH_AIRPORT PGH_PO PGH_TRUCK 
REGISTER (entering): finishInstanceDB(void)
Unknown relevant = 2
Unknown = 2
Static oneof atoms: 
REGISTER: finishInstanceDB(void) took 6.17504e-11 secs
Static atoms (11): FALSE FOO IN_CITY_A_PGH_AIRPORT_PGH IN_CITY_A_BOS_AIRPORT_BOS IN_CITY_L_PGH_PO_PGH IN_CITY_L_BOS_PO_BOS IN_CITY_T_PGH_TRUCK_PGH IN_CITY_T_BOS_TRUCK_BOS ACTIVE ALL_END CONT_DUMMY 
REGISTER (entering): calc_tags()
REGISTER (entering): calc_relevant()
starting iterations...
REGISTER: calc_relevant() took 0.004077 secs
REGISTER (entering): calc_relevant_obs()
REGISTER: calc_relevant_obs() took 4.49598e-10 secs
Accepted disjunction 7, 8, 
STAT Max-width: 1
Final disjunctions: 1
7, 8, 
==== End of Final disjunctions: 
All tags: AT_OL_PACKAGE1_PGH_PO(7) AT_OL_PACKAGE1_BOS_PO(8) 
For lit AT_AA_AIRPLANE1_PGH_AIRPORT(3) relevants tags are: 
For lit AT_AA_AIRPLANE1_BOS_AIRPORT(4) relevants tags are: 
For lit AT_OA_PACKAGE1_BOS_AIRPORT(6) relevants tags are: AT_OL_PACKAGE1_PGH_PO(7) AT_OL_PACKAGE1_BOS_PO(8) 
IMPLIES_WITH_INIT: From lit AT_OL_PACKAGE1_PGH_PO(7) obtaing the following lits:AT_OL_PACKAGE1_BOS_PO(-8) AT_OL_PACKAGE1_PGH_PO(7) 
IMPLIES_WITH_INIT: From lit AT_OL_PACKAGE1_BOS_PO(8) obtaing the following lits:AT_OL_PACKAGE1_PGH_PO(-7) AT_OL_PACKAGE1_BOS_PO(8) 
For lit AT_TA_PGH_TRUCK_PGH_AIRPORT(9) relevants tags are: 
For lit AT_TA_BOS_TRUCK_BOS_AIRPORT(10) relevants tags are: 
For lit AT_TL_PGH_TRUCK_PGH_PO(11) relevants tags are: 
For lit AT_TL_BOS_TRUCK_BOS_PO(12) relevants tags are: 
REGISTER: calc_tags() took 0.004077 secs
REGISTER (entering): make_k_0(m)
REGISTER: make_k_0(m) took 4.49598e-10 secs
REGISTER (entering): make_k_0(k)
REGISTER: make_k_0(k) took 4.49598e-10 secs
GENERAL: number of observations = 4
Unknown atoms: 7 8 
Unknown not in oneof: 
REGISTER (entering): make_split_t0c()
200 = k_AT_OL_PACKAGE1_BOS_PO___AT_OL_PACKAGE1_PGH_PO
201 = kn_AT_OL_PACKAGE1_BOS_PO___AT_OL_PACKAGE1_PGH_PO
202 = k_IN_OT_PACKAGE1_BOS_TRUCK___AT_OL_PACKAGE1_PGH_PO
203 = kn_IN_OT_PACKAGE1_BOS_TRUCK___AT_OL_PACKAGE1_PGH_PO
204 = k_AT_OL_PACKAGE1_BOS_PO___AT_OL_PACKAGE1_BOS_PO
205 = kn_AT_OL_PACKAGE1_BOS_PO___AT_OL_PACKAGE1_BOS_PO
206 = k_IN_OT_PACKAGE1_BOS_TRUCK___AT_OL_PACKAGE1_BOS_PO
207 = kn_IN_OT_PACKAGE1_BOS_TRUCK___AT_OL_PACKAGE1_BOS_PO
208 = k_AT_OL_PACKAGE1_PGH_PO___AT_OL_PACKAGE1_PGH_PO
209 = kn_AT_OL_PACKAGE1_PGH_PO___AT_OL_PACKAGE1_PGH_PO
210 = k_IN_OT_PACKAGE1_PGH_TRUCK___AT_OL_PACKAGE1_PGH_PO
211 = kn_IN_OT_PACKAGE1_PGH_TRUCK___AT_OL_PACKAGE1_PGH_PO
212 = k_AT_OL_PACKAGE1_PGH_PO___AT_OL_PACKAGE1_BOS_PO
213 = kn_AT_OL_PACKAGE1_PGH_PO___AT_OL_PACKAGE1_BOS_PO
214 = k_IN_OT_PACKAGE1_PGH_TRUCK___AT_OL_PACKAGE1_BOS_PO
215 = kn_IN_OT_PACKAGE1_PGH_TRUCK___AT_OL_PACKAGE1_BOS_PO
216 = k_AT_OA_PACKAGE1_PGH_AIRPORT___AT_OL_PACKAGE1_PGH_PO
217 = kn_AT_OA_PACKAGE1_PGH_AIRPORT___AT_OL_PACKAGE1_PGH_PO
218 = k_IN_OA_PACKAGE1_AIRPLANE1___AT_OL_PACKAGE1_PGH_PO
219 = kn_IN_OA_PACKAGE1_AIRPLANE1___AT_OL_PACKAGE1_PGH_PO
220 = k_AT_OA_PACKAGE1_PGH_AIRPORT___AT_OL_PACKAGE1_BOS_PO
221 = kn_AT_OA_PACKAGE1_PGH_AIRPORT___AT_OL_PACKAGE1_BOS_PO
222 = k_IN_OA_PACKAGE1_AIRPLANE1___AT_OL_PACKAGE1_BOS_PO
223 = kn_IN_OA_PACKAGE1_AIRPLANE1___AT_OL_PACKAGE1_BOS_PO
224 = k_AT_OA_PACKAGE1_BOS_AIRPORT___AT_OL_PACKAGE1_PGH_PO
225 = kn_AT_OA_PACKAGE1_BOS_AIRPORT___AT_OL_PACKAGE1_PGH_PO
226 = k_AT_OA_PACKAGE1_BOS_AIRPORT___AT_OL_PACKAGE1_BOS_PO
227 = kn_AT_OA_PACKAGE1_BOS_AIRPORT___AT_OL_PACKAGE1_BOS_PO
REGISTER: make_split_t0c() took 4.49598e-10 secs


Haciendo merge...
REGISTER (entering): make_k_t0c()
Trying to merge: AT_OA_PACKAGE1_BOS_AIRPORT(6)/(AT_OL_PACKAGE1_PGH_PO(7), ) with var = 7
Trying to make merge with (0) = (AT_OL_PACKAGE1_PGH_PO(7), AT_OL_PACKAGE1_BOS_PO(8), )
accepting 7 tagged 
accepting 8 tagged 
Merging with (0) = (7,8,)
Trying to merge: AT_OA_PACKAGE1_BOS_AIRPORT(6)/(AT_OL_PACKAGE1_BOS_PO(8), ) with var = 8
REGISTER: make_k_t0c() took 2.8199e-10 secs
REGISTER (entering): make_merge_act()
REGISTER: make_merge_act() took 2.8199e-10 secs
REGISTER (entering): make_merge_act()
REGISTER: make_merge_act() took 0.002224 secs
REGISTER (entering): make_merge_act()
REGISTER: make_merge_act() took 1.11163e-10 secs
REGISTER (entering): clean_actions()
fixpoint 0
fixpoint 0
fixpoint 0
fixpoint 0
fixpoint 1
Number of Atoms to del: 0
REGISTER: clean_actions() took 1.11163e-10 secs
IMPLIES_WITH_INIT: From lit AT_OL_PACKAGE1_PGH_PO(7) obtaing the following lits:IN_OT_PACKAGE1_BOS_TRUCK(-21) IN_OT_PACKAGE1_PGH_TRUCK(-20) IN_OA_PACKAGE1_AIRPLANE1(-19) AT_TA_BOS_TRUCK_BOS_AIRPORT(-10) AT_TA_PGH_TRUCK_PGH_AIRPORT(-9) AT_OL_PACKAGE1_BOS_PO(-8) AT_OA_PACKAGE1_BOS_AIRPORT(-6) AT_OA_PACKAGE1_PGH_AIRPORT(-5) AT_AA_AIRPLANE1_BOS_AIRPORT(-4) FALSE(-1) FOO(2) AT_AA_AIRPLANE1_PGH_AIRPORT(3) AT_OL_PACKAGE1_PGH_PO(7) AT_TL_PGH_TRUCK_PGH_PO(11) AT_TL_BOS_TRUCK_BOS_PO(12) IN_CITY_A_PGH_AIRPORT_PGH(13) IN_CITY_A_BOS_AIRPORT_BOS(14) IN_CITY_L_PGH_PO_PGH(15) IN_CITY_L_BOS_PO_BOS(16) IN_CITY_T_PGH_TRUCK_PGH(17) IN_CITY_T_BOS_TRUCK_BOS(18) 
IMPLIES_WITH_INIT: From lit AT_OL_PACKAGE1_BOS_PO(8) obtaing the following lits:IN_OT_PACKAGE1_BOS_TRUCK(-21) IN_OT_PACKAGE1_PGH_TRUCK(-20) IN_OA_PACKAGE1_AIRPLANE1(-19) AT_TA_BOS_TRUCK_BOS_AIRPORT(-10) AT_TA_PGH_TRUCK_PGH_AIRPORT(-9) AT_OL_PACKAGE1_PGH_PO(-7) AT_OA_PACKAGE1_BOS_AIRPORT(-6) AT_OA_PACKAGE1_PGH_AIRPORT(-5) AT_AA_AIRPLANE1_BOS_AIRPORT(-4) FALSE(-1) FOO(2) AT_AA_AIRPLANE1_PGH_AIRPORT(3) AT_OL_PACKAGE1_BOS_PO(8) AT_TL_PGH_TRUCK_PGH_PO(11) AT_TL_BOS_TRUCK_BOS_PO(12) IN_CITY_A_PGH_AIRPORT_PGH(13) IN_CITY_A_BOS_AIRPORT_BOS(14) IN_CITY_L_PGH_PO_PGH(15) IN_CITY_L_BOS_PO_BOS(16) IN_CITY_T_PGH_TRUCK_PGH(17) IN_CITY_T_BOS_TRUCK_BOS(18) 
REGISTER (entering): printNewPDDL()
Generating PDDL
printing 55 actions
printing 6 observations
STAT old-Actions: 18
STAT old-Atoms: 24
STAT old-cond-effects: 19
STAT old-condicionales: 36
STAT KP-NActions: 55
STAT KP-NAtoms: 230
STAT KP-deleted-NAtoms: 0
STAT KP-Nconds-effects-and-notused: 240
STAT KP-Ncond-effects: 240
STAT KP-Numero_lit_en_efectos_condicionales: 624
REGISTER: printNewPDDL() took 0.015223 secs
REGISTER: main() took 0.028902 secs

ff: parsing domain file
domain 'LOGISTICS_CONF' defined
 ... done.
ff: parsing problem file
problem 'HARD_1PK_2CTY' defined
 ... done.

STATS quality of hash table of predicates: max_bucket_size = 4, ave_bucket_size = 0.586118
ff-cond: no description file
fact T0_FAIL_K0 tagged as 81  


Skipping All searches!
Starting K procedure.

          h:                         9            [1]
          h:                         9  , h_  :    8       
::::::::::::::::::::::::current action:::LOAD_TRUCK_LOC_PACKAGE1_PGH_TRUCK_PGH_PO_PGH

          h:                         8            [1]
          h:                         8  , h_  :    7       
::::::::::::::::::::::::current action:::LOAD_TRUCK_LOC_PACKAGE1_BOS_TRUCK_BOS_PO_BOS

          h:                         7            [1]
          h:                         7  , h_  :    6       
::::::::::::::::::::::::current action:::DRIVE_TRUCK_LOC_AP_PGH_TRUCK_PGH_PO_PGH_AIRPORT_PGH

          h:                         6            [1]
          h:                         6  , h_  :    5       
::::::::::::::::::::::::current action:::UNLOAD_TRUCK_AP_PACKAGE1_PGH_TRUCK_PGH_AIRPORT_PGH

          h:                         5            [1]
          h:                         5  , h_  :    4       
::::::::::::::::::::::::current action:::LOAD_AIRPLANE_PACKAGE1_AIRPLANE1_PGH_AIRPORT

          h:                         4            [1]
          h:                         4  , h_  :    3       
::::::::::::::::::::::::current action:::FLY_AIRPLANE_AIRPLANE1_PGH_AIRPORT_BOS_AIRPORT

          h:                         3            [1]
          h:                         3  , h_  :    2       
::::::::::::::::::::::::current action:::UNLOAD_AIRPLANE_PACKAGE1_AIRPLANE1_BOS_AIRPORT

          h:                         2            [1]
          h:                         2  , h_  :    1       
::::::::::::::::::::::::current action:::DRIVE_TRUCK_LOC_AP_BOS_TRUCK_BOS_PO_BOS_AIRPORT_BOS

          h:                         1            [1]
          h:                         1  , h_  :    0       
::::::::::::::::::::::::current action:::UNLOAD_TRUCK_AP_PACKAGE1_BOS_TRUCK_BOS_AIRPORT_BOS

Goal reached in a branch 
root


ff: found legal plan as follows

Total branches in this plan: 1 
Longest branch: 9
Total spurious branches in this plan: 0
Total number of actions: 9


time spent:    0.00 seconds instantiating 61 easy, 0 hard action templates
               0.00 seconds reachability analysis, yielding 141 facts and 61 actions
               0.00 seconds creating final representation with 130 relevant facts
               0.00 seconds building connectivity graph
               0.00 seconds computing closures operations
               0.00 seconds searching, evaluating 28 states, expanding 9 nodes, to a max depth of 1
               0.00 seconds total time



