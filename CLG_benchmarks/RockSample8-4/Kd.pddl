(define (domain KRockSample8-4)
(:requirements :strips :typing)
(:types LOCATION ROCK HEIGHT MOVESTEP TAG_TYPE VALUE_TYPE)
(:constants
 p1-1 - LOCATION
 p1-2 - LOCATION
 p1-3 - LOCATION
 p1-4 - LOCATION
 p1-5 - LOCATION
 p1-6 - LOCATION
 p1-7 - LOCATION
 p1-8 - LOCATION
 p2-1 - LOCATION
 p2-2 - LOCATION
 p2-3 - LOCATION
 p2-4 - LOCATION
 p2-5 - LOCATION
 p2-6 - LOCATION
 p2-7 - LOCATION
 p2-8 - LOCATION
 p3-1 - LOCATION
 p3-2 - LOCATION
 p3-3 - LOCATION
 p3-4 - LOCATION
 p3-5 - LOCATION
 p3-6 - LOCATION
 p3-7 - LOCATION
 p3-8 - LOCATION
 p4-1 - LOCATION
 p4-2 - LOCATION
 p4-3 - LOCATION
 p4-4 - LOCATION
 p4-5 - LOCATION
 p4-6 - LOCATION
 p4-7 - LOCATION
 p4-8 - LOCATION
 p5-1 - LOCATION
 p5-2 - LOCATION
 p5-3 - LOCATION
 p5-4 - LOCATION
 p5-5 - LOCATION
 p5-6 - LOCATION
 p5-7 - LOCATION
 p5-8 - LOCATION
 p6-1 - LOCATION
 p6-2 - LOCATION
 p6-3 - LOCATION
 p6-4 - LOCATION
 p6-5 - LOCATION
 p6-6 - LOCATION
 p6-7 - LOCATION
 p6-8 - LOCATION
 p7-1 - LOCATION
 p7-2 - LOCATION
 p7-3 - LOCATION
 p7-4 - LOCATION
 p7-5 - LOCATION
 p7-6 - LOCATION
 p7-7 - LOCATION
 p7-8 - LOCATION
 p8-1 - LOCATION
 p8-2 - LOCATION
 p8-3 - LOCATION
 p8-4 - LOCATION
 p8-5 - LOCATION
 p8-6 - LOCATION
 p8-7 - LOCATION
 p8-8 - LOCATION
 r0 - ROCK
 r1 - ROCK
 r2 - ROCK
 r3 - ROCK
 h0 - HEIGHT
 h1 - HEIGHT
 tag0 - TAG_TYPE ; (good r0) (good r1) (good r2) (good r3)
 tag1 - TAG_TYPE ; (not (good r0)) (not (good r1)) (not (good r2)) (not (good r3))
 V_TRUE - VALUE_TYPE
 V_FALSE - VALUE_TYPE
)

(:predicates
(Krock-at ?r - ROCK ?p - LOCATION ?V_PARAM - VALUE_TYPE)
(Givenagent-at ?p - LOCATION ?TAG_PARAM - TAG_TYPE)
(Kadj ?p1 - LOCATION ?p2 - LOCATION ?V_PARAM - VALUE_TYPE)
(Givengood ?r - ROCK ?TAG_PARAM - TAG_TYPE)
(KWGivengood ?r - ROCK ?TAG_PARAM - TAG_TYPE)
(Givenantena-height ?h - HEIGHT ?TAG_PARAM - TAG_TYPE)
(Givengood-rocks-in-range ?TAG_PARAM - TAG_TYPE)
(KWGivengood-rocks-in-range ?TAG_PARAM - TAG_TYPE)
(KNot ?TAG_PARAM1 - TAG_TYPE ?TAG_PARAM2 - TAG_TYPE)
(NotInAction )
(P1-activate-sensor-at-p1-1-h1-KW-tag0-tag1 )
(P2-activate-sensor-at-p1-1-h1-KW-tag0-tag1 )
(P1-activate-sensor-at-p1-1-h1-KW-tag0 )
(P2-activate-sensor-at-p1-1-h1-KW-tag0 )
(P1-activate-sensor-at-p1-1-h1-KW-tag1 )
(P2-activate-sensor-at-p1-1-h1-KW-tag1 )
(P1-activate-sensor-at-p1-2-h1-KW-tag0-tag1 )
(P2-activate-sensor-at-p1-2-h1-KW-tag0-tag1 )
(P1-activate-sensor-at-p1-2-h1-KW-tag0 )
(P2-activate-sensor-at-p1-2-h1-KW-tag0 )
(P1-activate-sensor-at-p1-2-h1-KW-tag1 )
(P2-activate-sensor-at-p1-2-h1-KW-tag1 )
(P1-activate-sensor-at-p1-3-h0-KW-tag0-tag1 )
(P2-activate-sensor-at-p1-3-h0-KW-tag0-tag1 )
(P1-activate-sensor-at-p1-3-h0-KW-tag0 )
(P2-activate-sensor-at-p1-3-h0-KW-tag0 )
(P1-activate-sensor-at-p1-3-h0-KW-tag1 )
(P2-activate-sensor-at-p1-3-h0-KW-tag1 )
(P1-activate-sensor-at-p1-3-h1-KW-tag0-tag1 )
(P2-activate-sensor-at-p1-3-h1-KW-tag0-tag1 )
(P1-activate-sensor-at-p1-3-h1-KW-tag0 )
(P2-activate-sensor-at-p1-3-h1-KW-tag0 )
(P1-activate-sensor-at-p1-3-h1-KW-tag1 )
(P2-activate-sensor-at-p1-3-h1-KW-tag1 )
(P1-activate-sensor-at-p1-4-h1-KW-tag0-tag1 )
(P2-activate-sensor-at-p1-4-h1-KW-tag0-tag1 )
(P1-activate-sensor-at-p1-4-h1-KW-tag0 )
(P2-activate-sensor-at-p1-4-h1-KW-tag0 )
(P1-activate-sensor-at-p1-4-h1-KW-tag1 )
(P2-activate-sensor-at-p1-4-h1-KW-tag1 )
(P1-activate-sensor-at-p1-8-h1-KW-tag0-tag1 )
(P2-activate-sensor-at-p1-8-h1-KW-tag0-tag1 )
(P1-activate-sensor-at-p1-8-h1-KW-tag0 )
(P2-activate-sensor-at-p1-8-h1-KW-tag0 )
(P1-activate-sensor-at-p1-8-h1-KW-tag1 )
(P2-activate-sensor-at-p1-8-h1-KW-tag1 )
(P1-activate-sensor-at-p2-1-h0-KW-tag0-tag1 )
(P2-activate-sensor-at-p2-1-h0-KW-tag0-tag1 )
(P1-activate-sensor-at-p2-1-h0-KW-tag0 )
(P2-activate-sensor-at-p2-1-h0-KW-tag0 )
(P1-activate-sensor-at-p2-1-h0-KW-tag1 )
(P2-activate-sensor-at-p2-1-h0-KW-tag1 )
(P1-activate-sensor-at-p2-1-h1-KW-tag0-tag1 )
(P2-activate-sensor-at-p2-1-h1-KW-tag0-tag1 )
(P1-activate-sensor-at-p2-1-h1-KW-tag0 )
(P2-activate-sensor-at-p2-1-h1-KW-tag0 )
(P1-activate-sensor-at-p2-1-h1-KW-tag1 )
(P2-activate-sensor-at-p2-1-h1-KW-tag1 )
(P1-activate-sensor-at-p2-2-h1-KW-tag0-tag1 )
(P2-activate-sensor-at-p2-2-h1-KW-tag0-tag1 )
(P1-activate-sensor-at-p2-2-h1-KW-tag0 )
(P2-activate-sensor-at-p2-2-h1-KW-tag0 )
(P1-activate-sensor-at-p2-2-h1-KW-tag1 )
(P2-activate-sensor-at-p2-2-h1-KW-tag1 )
(P1-activate-sensor-at-p2-3-h1-KW-tag0-tag1 )
(P2-activate-sensor-at-p2-3-h1-KW-tag0-tag1 )
(P1-activate-sensor-at-p2-3-h1-KW-tag0 )
(P2-activate-sensor-at-p2-3-h1-KW-tag0 )
(P1-activate-sensor-at-p2-3-h1-KW-tag1 )
(P2-activate-sensor-at-p2-3-h1-KW-tag1 )
(P1-activate-sensor-at-p2-7-h1-KW-tag0-tag1 )
(P2-activate-sensor-at-p2-7-h1-KW-tag0-tag1 )
(P1-activate-sensor-at-p2-7-h1-KW-tag0 )
(P2-activate-sensor-at-p2-7-h1-KW-tag0 )
(P1-activate-sensor-at-p2-7-h1-KW-tag1 )
(P2-activate-sensor-at-p2-7-h1-KW-tag1 )
(P1-activate-sensor-at-p2-8-h0-KW-tag0-tag1 )
(P2-activate-sensor-at-p2-8-h0-KW-tag0-tag1 )
(P1-activate-sensor-at-p2-8-h0-KW-tag0 )
(P2-activate-sensor-at-p2-8-h0-KW-tag0 )
(P1-activate-sensor-at-p2-8-h0-KW-tag1 )
(P2-activate-sensor-at-p2-8-h0-KW-tag1 )
(P1-activate-sensor-at-p2-8-h1-KW-tag0-tag1 )
(P2-activate-sensor-at-p2-8-h1-KW-tag0-tag1 )
(P1-activate-sensor-at-p2-8-h1-KW-tag0 )
(P2-activate-sensor-at-p2-8-h1-KW-tag0 )
(P1-activate-sensor-at-p2-8-h1-KW-tag1 )
(P2-activate-sensor-at-p2-8-h1-KW-tag1 )
(P1-activate-sensor-at-p3-1-h1-KW-tag0-tag1 )
(P2-activate-sensor-at-p3-1-h1-KW-tag0-tag1 )
(P1-activate-sensor-at-p3-1-h1-KW-tag0 )
(P2-activate-sensor-at-p3-1-h1-KW-tag0 )
(P1-activate-sensor-at-p3-1-h1-KW-tag1 )
(P2-activate-sensor-at-p3-1-h1-KW-tag1 )
(P1-activate-sensor-at-p3-8-h1-KW-tag0-tag1 )
(P2-activate-sensor-at-p3-8-h1-KW-tag0-tag1 )
(P1-activate-sensor-at-p3-8-h1-KW-tag0 )
(P2-activate-sensor-at-p3-8-h1-KW-tag0 )
(P1-activate-sensor-at-p3-8-h1-KW-tag1 )
(P2-activate-sensor-at-p3-8-h1-KW-tag1 )
(P1-activate-sensor-at-p6-4-h1-KW-tag0-tag1 )
(P2-activate-sensor-at-p6-4-h1-KW-tag0-tag1 )
(P1-activate-sensor-at-p6-4-h1-KW-tag0 )
(P2-activate-sensor-at-p6-4-h1-KW-tag0 )
(P1-activate-sensor-at-p6-4-h1-KW-tag1 )
(P2-activate-sensor-at-p6-4-h1-KW-tag1 )
(P1-activate-sensor-at-p7-3-h1-KW-tag0-tag1 )
(P2-activate-sensor-at-p7-3-h1-KW-tag0-tag1 )
(P1-activate-sensor-at-p7-3-h1-KW-tag0 )
(P2-activate-sensor-at-p7-3-h1-KW-tag0 )
(P1-activate-sensor-at-p7-3-h1-KW-tag1 )
(P2-activate-sensor-at-p7-3-h1-KW-tag1 )
(P1-activate-sensor-at-p7-4-h0-KW-tag0-tag1 )
(P2-activate-sensor-at-p7-4-h0-KW-tag0-tag1 )
(P1-activate-sensor-at-p7-4-h0-KW-tag0 )
(P2-activate-sensor-at-p7-4-h0-KW-tag0 )
(P1-activate-sensor-at-p7-4-h0-KW-tag1 )
(P2-activate-sensor-at-p7-4-h0-KW-tag1 )
(P1-activate-sensor-at-p7-4-h1-KW-tag0-tag1 )
(P2-activate-sensor-at-p7-4-h1-KW-tag0-tag1 )
(P1-activate-sensor-at-p7-4-h1-KW-tag0 )
(P2-activate-sensor-at-p7-4-h1-KW-tag0 )
(P1-activate-sensor-at-p7-4-h1-KW-tag1 )
(P2-activate-sensor-at-p7-4-h1-KW-tag1 )
(P1-activate-sensor-at-p7-5-h1-KW-tag0-tag1 )
(P2-activate-sensor-at-p7-5-h1-KW-tag0-tag1 )
(P1-activate-sensor-at-p7-5-h1-KW-tag0 )
(P2-activate-sensor-at-p7-5-h1-KW-tag0 )
(P1-activate-sensor-at-p7-5-h1-KW-tag1 )
(P2-activate-sensor-at-p7-5-h1-KW-tag1 )
(P1-activate-sensor-at-p8-4-h1-KW-tag0-tag1 )
(P2-activate-sensor-at-p8-4-h1-KW-tag0-tag1 )
(P1-activate-sensor-at-p8-4-h1-KW-tag0 )
(P2-activate-sensor-at-p8-4-h1-KW-tag0 )
(P1-activate-sensor-at-p8-4-h1-KW-tag1 )
(P2-activate-sensor-at-p8-4-h1-KW-tag1 )
)
(:action move-KW-tag0-tag1-State
:parameters ( ?pSource - LOCATION ?pTarget - LOCATION)
:precondition (and (Kadj ?pSource ?pTarget V_TRUE) (Givenagent-at ?pSource tag0) (Givenantena-height h0 tag0) (Givenagent-at ?pSource tag1) (Givenantena-height h0 tag1) (not (KNot tag1 tag0)) (NotInAction ))
:effect (and (Givenagent-at ?pTarget tag0) (not (Givenagent-at ?pSource tag0)) (not (Givengood-rocks-in-range tag0)) (KWGivengood-rocks-in-range tag0) (Givenagent-at ?pTarget tag1) (not (Givenagent-at ?pSource tag1)) (not (Givengood-rocks-in-range tag1)) (KWGivengood-rocks-in-range tag1))
)
(:action move-KW-tag0-State
:parameters ( ?pSource - LOCATION ?pTarget - LOCATION)
:precondition (and (Kadj ?pSource ?pTarget V_TRUE) (Givenagent-at ?pSource tag0) (Givenantena-height h0 tag0) (KNot tag1 tag0) (NotInAction ))
:effect (and (Givenagent-at ?pTarget tag0) (not (Givenagent-at ?pSource tag0)) (not (Givengood-rocks-in-range tag0)) (KWGivengood-rocks-in-range tag0))
)
(:action move-KW-tag1-State
:parameters ( ?pSource - LOCATION ?pTarget - LOCATION)
:precondition (and (Kadj ?pSource ?pTarget V_TRUE) (Givenagent-at ?pSource tag1) (Givenantena-height h0 tag1) (KNot tag0 tag1) (NotInAction ))
:effect (and (Givenagent-at ?pTarget tag1) (not (Givenagent-at ?pSource tag1)) (not (Givengood-rocks-in-range tag1)) (KWGivengood-rocks-in-range tag1))
)
(:action sample-KW-tag0-tag1-State
:parameters ( ?r - ROCK ?p - LOCATION)
:precondition (and (Krock-at ?r ?p V_TRUE) (Givenagent-at ?p tag0) (Givengood ?r tag0) (KWGivengood ?r tag0) (Givenagent-at ?p tag1) (Givengood ?r tag1) (KWGivengood ?r tag1) (not (KNot tag1 tag0)) (NotInAction ))
:effect (and (not (Givengood ?r tag0)) (KWGivengood ?r tag0) (not (Givengood ?r tag1)) (KWGivengood ?r tag1))
)
(:action sample-KW-tag0-State
:parameters ( ?r - ROCK ?p - LOCATION)
:precondition (and (Krock-at ?r ?p V_TRUE) (Givenagent-at ?p tag0) (Givengood ?r tag0) (KWGivengood ?r tag0) (KNot tag1 tag0) (NotInAction ))
:effect (and (not (Givengood ?r tag0)) (KWGivengood ?r tag0))
)
(:action sample-KW-tag1-State
:parameters ( ?r - ROCK ?p - LOCATION)
:precondition (and (Krock-at ?r ?p V_TRUE) (Givenagent-at ?p tag1) (Givengood ?r tag1) (KWGivengood ?r tag1) (KNot tag0 tag1) (NotInAction ))
:effect (and (not (Givengood ?r tag1)) (KWGivengood ?r tag1))
)
(:action raise-antena-KW-tag0-tag1-State
:parameters ()
:precondition (and (NotInAction ))
:effect (and (Givenantena-height h1 tag0) (not (Givenantena-height h0 tag0)) (Givenantena-height h1 tag1) (not (Givenantena-height h0 tag1)))
)
(:action raise-antena-KW-tag0-State
:parameters ()
:precondition (and (KNot tag1 tag0) (NotInAction ))
:effect (and (Givenantena-height h1 tag0) (not (Givenantena-height h0 tag0)))
)
(:action raise-antena-KW-tag1-State
:parameters ()
:precondition (and (KNot tag0 tag1) (NotInAction ))
:effect (and (Givenantena-height h1 tag1) (not (Givenantena-height h0 tag1)))
)
(:action lower-antena-KW-tag0-tag1-State
:parameters ()
:precondition (and (NotInAction ))
:effect (and (not (Givenantena-height h1 tag0)) (Givenantena-height h0 tag0) (not (Givenantena-height h1 tag1)) (Givenantena-height h0 tag1))
)
(:action lower-antena-KW-tag0-State
:parameters ()
:precondition (and (KNot tag1 tag0) (NotInAction ))
:effect (and (not (Givenantena-height h1 tag0)) (Givenantena-height h0 tag0))
)
(:action lower-antena-KW-tag1-State
:parameters ()
:precondition (and (KNot tag0 tag1) (NotInAction ))
:effect (and (not (Givenantena-height h1 tag1)) (Givenantena-height h0 tag1))
)
(:action activate-sensor-at-p1-1-h1-KW-tag0-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p1-1 tag0) (Givenantena-height h1 tag0) (Givenagent-at p1-1 tag1) (Givenantena-height h1 tag1) (not (KNot tag1 tag0)) (NotInAction ))
:effect (and (P1-activate-sensor-at-p1-1-h1-KW-tag0-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r3 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r3 tag1)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r3 tag0)) (and (not (KWGivengood-rocks-in-range tag1)))) 
	(when (not (KWGivengood r3 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p1-1-h1-KW-tag0-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p1-1-h1-KW-tag0-tag1 )
:effect (and (P2-activate-sensor-at-p1-1-h1-KW-tag0-tag1 ) (not (P1-activate-sensor-at-p1-1-h1-KW-tag0-tag1 )) 
	(when (and (KWGivengood r3 tag0) (Givengood r3 tag0) (KWGivengood r3 tag1) (Givengood r3 tag1)) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r3 tag0) (not (Givengood r3 tag0)) (KWGivengood r3 tag1) (not (Givengood r3 tag1))) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p1-1-h1-KW-tag0-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p1-1-h1-KW-tag0-tag1 )
:effect (and (not (P2-activate-sensor-at-p1-1-h1-KW-tag0-tag1 )) (NotInAction ) 
	(when (Givengood r3 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (Givengood r3 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r3 tag0)) (and (not (Givengood-rocks-in-range tag0)))) 
	(when (not (Givengood r3 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p1-1-h1-KW-tag0-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p1-1 tag0) (Givenantena-height h1 tag0) (KNot tag1 tag0) (NotInAction ))
:effect (and (P1-activate-sensor-at-p1-1-h1-KW-tag0 ) (not (NotInAction )) 
	(when (not (KWGivengood r3 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p1-1-h1-KW-tag0-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p1-1-h1-KW-tag0 )
:effect (and (P2-activate-sensor-at-p1-1-h1-KW-tag0 ) (not (P1-activate-sensor-at-p1-1-h1-KW-tag0 )) 
	(when (and (KWGivengood r3 tag0) (Givengood r3 tag0)) (and (KWGivengood-rocks-in-range tag0))) 
	(when (and (KWGivengood r3 tag0) (not (Givengood r3 tag0))) (and (KWGivengood-rocks-in-range tag0))))
)
(:action activate-sensor-at-p1-1-h1-KW-tag0-State
:parameters ()
:precondition (P2-activate-sensor-at-p1-1-h1-KW-tag0 )
:effect (and (not (P2-activate-sensor-at-p1-1-h1-KW-tag0 )) (NotInAction ) 
	(when (Givengood r3 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (not (Givengood r3 tag0)) (and (not (Givengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p1-1-h1-KW-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p1-1 tag1) (Givenantena-height h1 tag1) (KNot tag0 tag1) (NotInAction ))
:effect (and (P1-activate-sensor-at-p1-1-h1-KW-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r3 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p1-1-h1-KW-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p1-1-h1-KW-tag1 )
:effect (and (P2-activate-sensor-at-p1-1-h1-KW-tag1 ) (not (P1-activate-sensor-at-p1-1-h1-KW-tag1 )) 
	(when (and (KWGivengood r3 tag1) (Givengood r3 tag1)) (and (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r3 tag1) (not (Givengood r3 tag1))) (and (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p1-1-h1-KW-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p1-1-h1-KW-tag1 )
:effect (and (not (P2-activate-sensor-at-p1-1-h1-KW-tag1 )) (NotInAction ) 
	(when (Givengood r3 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r3 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p1-2-h1-KW-tag0-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p1-2 tag0) (Givenantena-height h1 tag0) (Givenagent-at p1-2 tag1) (Givenantena-height h1 tag1) (not (KNot tag1 tag0)) (NotInAction ))
:effect (and (P1-activate-sensor-at-p1-2-h1-KW-tag0-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r2 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r2 tag1)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r2 tag0)) (and (not (KWGivengood-rocks-in-range tag1)))) 
	(when (not (KWGivengood r2 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p1-2-h1-KW-tag0-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p1-2-h1-KW-tag0-tag1 )
:effect (and (P2-activate-sensor-at-p1-2-h1-KW-tag0-tag1 ) (not (P1-activate-sensor-at-p1-2-h1-KW-tag0-tag1 )) 
	(when (and (KWGivengood r2 tag0) (Givengood r2 tag0) (KWGivengood r2 tag1) (Givengood r2 tag1)) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r2 tag0) (not (Givengood r2 tag0)) (KWGivengood r2 tag1) (not (Givengood r2 tag1))) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p1-2-h1-KW-tag0-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p1-2-h1-KW-tag0-tag1 )
:effect (and (not (P2-activate-sensor-at-p1-2-h1-KW-tag0-tag1 )) (NotInAction ) 
	(when (Givengood r2 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (Givengood r2 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r2 tag0)) (and (not (Givengood-rocks-in-range tag0)))) 
	(when (not (Givengood r2 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p1-2-h1-KW-tag0-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p1-2 tag0) (Givenantena-height h1 tag0) (KNot tag1 tag0) (NotInAction ))
:effect (and (P1-activate-sensor-at-p1-2-h1-KW-tag0 ) (not (NotInAction )) 
	(when (not (KWGivengood r2 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p1-2-h1-KW-tag0-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p1-2-h1-KW-tag0 )
:effect (and (P2-activate-sensor-at-p1-2-h1-KW-tag0 ) (not (P1-activate-sensor-at-p1-2-h1-KW-tag0 )) 
	(when (and (KWGivengood r2 tag0) (Givengood r2 tag0)) (and (KWGivengood-rocks-in-range tag0))) 
	(when (and (KWGivengood r2 tag0) (not (Givengood r2 tag0))) (and (KWGivengood-rocks-in-range tag0))))
)
(:action activate-sensor-at-p1-2-h1-KW-tag0-State
:parameters ()
:precondition (P2-activate-sensor-at-p1-2-h1-KW-tag0 )
:effect (and (not (P2-activate-sensor-at-p1-2-h1-KW-tag0 )) (NotInAction ) 
	(when (Givengood r2 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (not (Givengood r2 tag0)) (and (not (Givengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p1-2-h1-KW-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p1-2 tag1) (Givenantena-height h1 tag1) (KNot tag0 tag1) (NotInAction ))
:effect (and (P1-activate-sensor-at-p1-2-h1-KW-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r2 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p1-2-h1-KW-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p1-2-h1-KW-tag1 )
:effect (and (P2-activate-sensor-at-p1-2-h1-KW-tag1 ) (not (P1-activate-sensor-at-p1-2-h1-KW-tag1 )) 
	(when (and (KWGivengood r2 tag1) (Givengood r2 tag1)) (and (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r2 tag1) (not (Givengood r2 tag1))) (and (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p1-2-h1-KW-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p1-2-h1-KW-tag1 )
:effect (and (not (P2-activate-sensor-at-p1-2-h1-KW-tag1 )) (NotInAction ) 
	(when (Givengood r2 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r2 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p1-3-h0-KW-tag0-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p1-3 tag0) (Givenantena-height h0 tag0) (Givenagent-at p1-3 tag1) (Givenantena-height h0 tag1) (not (KNot tag1 tag0)) (NotInAction ))
:effect (and (P1-activate-sensor-at-p1-3-h0-KW-tag0-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r2 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r2 tag1)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r2 tag0)) (and (not (KWGivengood-rocks-in-range tag1)))) 
	(when (not (KWGivengood r2 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p1-3-h0-KW-tag0-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p1-3-h0-KW-tag0-tag1 )
:effect (and (P2-activate-sensor-at-p1-3-h0-KW-tag0-tag1 ) (not (P1-activate-sensor-at-p1-3-h0-KW-tag0-tag1 )) 
	(when (and (KWGivengood r2 tag0) (Givengood r2 tag0) (KWGivengood r2 tag1) (Givengood r2 tag1)) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r2 tag0) (not (Givengood r2 tag0)) (KWGivengood r2 tag1) (not (Givengood r2 tag1))) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p1-3-h0-KW-tag0-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p1-3-h0-KW-tag0-tag1 )
:effect (and (not (P2-activate-sensor-at-p1-3-h0-KW-tag0-tag1 )) (NotInAction ) 
	(when (Givengood r2 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (Givengood r2 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r2 tag0)) (and (not (Givengood-rocks-in-range tag0)))) 
	(when (not (Givengood r2 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p1-3-h0-KW-tag0-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p1-3 tag0) (Givenantena-height h0 tag0) (KNot tag1 tag0) (NotInAction ))
:effect (and (P1-activate-sensor-at-p1-3-h0-KW-tag0 ) (not (NotInAction )) 
	(when (not (KWGivengood r2 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p1-3-h0-KW-tag0-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p1-3-h0-KW-tag0 )
:effect (and (P2-activate-sensor-at-p1-3-h0-KW-tag0 ) (not (P1-activate-sensor-at-p1-3-h0-KW-tag0 )) 
	(when (and (KWGivengood r2 tag0) (Givengood r2 tag0)) (and (KWGivengood-rocks-in-range tag0))) 
	(when (and (KWGivengood r2 tag0) (not (Givengood r2 tag0))) (and (KWGivengood-rocks-in-range tag0))))
)
(:action activate-sensor-at-p1-3-h0-KW-tag0-State
:parameters ()
:precondition (P2-activate-sensor-at-p1-3-h0-KW-tag0 )
:effect (and (not (P2-activate-sensor-at-p1-3-h0-KW-tag0 )) (NotInAction ) 
	(when (Givengood r2 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (not (Givengood r2 tag0)) (and (not (Givengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p1-3-h0-KW-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p1-3 tag1) (Givenantena-height h0 tag1) (KNot tag0 tag1) (NotInAction ))
:effect (and (P1-activate-sensor-at-p1-3-h0-KW-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r2 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p1-3-h0-KW-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p1-3-h0-KW-tag1 )
:effect (and (P2-activate-sensor-at-p1-3-h0-KW-tag1 ) (not (P1-activate-sensor-at-p1-3-h0-KW-tag1 )) 
	(when (and (KWGivengood r2 tag1) (Givengood r2 tag1)) (and (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r2 tag1) (not (Givengood r2 tag1))) (and (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p1-3-h0-KW-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p1-3-h0-KW-tag1 )
:effect (and (not (P2-activate-sensor-at-p1-3-h0-KW-tag1 )) (NotInAction ) 
	(when (Givengood r2 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r2 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p1-3-h1-KW-tag0-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p1-3 tag0) (Givenantena-height h1 tag0) (Givenagent-at p1-3 tag1) (Givenantena-height h1 tag1) (not (KNot tag1 tag0)) (NotInAction ))
:effect (and (P1-activate-sensor-at-p1-3-h1-KW-tag0-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r2 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r2 tag1)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r2 tag0)) (and (not (KWGivengood-rocks-in-range tag1)))) 
	(when (not (KWGivengood r2 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p1-3-h1-KW-tag0-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p1-3-h1-KW-tag0-tag1 )
:effect (and (P2-activate-sensor-at-p1-3-h1-KW-tag0-tag1 ) (not (P1-activate-sensor-at-p1-3-h1-KW-tag0-tag1 )) 
	(when (and (KWGivengood r2 tag0) (Givengood r2 tag0) (KWGivengood r2 tag1) (Givengood r2 tag1)) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r2 tag0) (not (Givengood r2 tag0)) (KWGivengood r2 tag1) (not (Givengood r2 tag1))) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p1-3-h1-KW-tag0-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p1-3-h1-KW-tag0-tag1 )
:effect (and (not (P2-activate-sensor-at-p1-3-h1-KW-tag0-tag1 )) (NotInAction ) 
	(when (Givengood r2 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (Givengood r2 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r2 tag0)) (and (not (Givengood-rocks-in-range tag0)))) 
	(when (not (Givengood r2 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p1-3-h1-KW-tag0-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p1-3 tag0) (Givenantena-height h1 tag0) (KNot tag1 tag0) (NotInAction ))
:effect (and (P1-activate-sensor-at-p1-3-h1-KW-tag0 ) (not (NotInAction )) 
	(when (not (KWGivengood r2 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p1-3-h1-KW-tag0-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p1-3-h1-KW-tag0 )
:effect (and (P2-activate-sensor-at-p1-3-h1-KW-tag0 ) (not (P1-activate-sensor-at-p1-3-h1-KW-tag0 )) 
	(when (and (KWGivengood r2 tag0) (Givengood r2 tag0)) (and (KWGivengood-rocks-in-range tag0))) 
	(when (and (KWGivengood r2 tag0) (not (Givengood r2 tag0))) (and (KWGivengood-rocks-in-range tag0))))
)
(:action activate-sensor-at-p1-3-h1-KW-tag0-State
:parameters ()
:precondition (P2-activate-sensor-at-p1-3-h1-KW-tag0 )
:effect (and (not (P2-activate-sensor-at-p1-3-h1-KW-tag0 )) (NotInAction ) 
	(when (Givengood r2 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (not (Givengood r2 tag0)) (and (not (Givengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p1-3-h1-KW-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p1-3 tag1) (Givenantena-height h1 tag1) (KNot tag0 tag1) (NotInAction ))
:effect (and (P1-activate-sensor-at-p1-3-h1-KW-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r2 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p1-3-h1-KW-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p1-3-h1-KW-tag1 )
:effect (and (P2-activate-sensor-at-p1-3-h1-KW-tag1 ) (not (P1-activate-sensor-at-p1-3-h1-KW-tag1 )) 
	(when (and (KWGivengood r2 tag1) (Givengood r2 tag1)) (and (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r2 tag1) (not (Givengood r2 tag1))) (and (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p1-3-h1-KW-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p1-3-h1-KW-tag1 )
:effect (and (not (P2-activate-sensor-at-p1-3-h1-KW-tag1 )) (NotInAction ) 
	(when (Givengood r2 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r2 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p1-4-h1-KW-tag0-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p1-4 tag0) (Givenantena-height h1 tag0) (Givenagent-at p1-4 tag1) (Givenantena-height h1 tag1) (not (KNot tag1 tag0)) (NotInAction ))
:effect (and (P1-activate-sensor-at-p1-4-h1-KW-tag0-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r2 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r2 tag1)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r2 tag0)) (and (not (KWGivengood-rocks-in-range tag1)))) 
	(when (not (KWGivengood r2 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p1-4-h1-KW-tag0-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p1-4-h1-KW-tag0-tag1 )
:effect (and (P2-activate-sensor-at-p1-4-h1-KW-tag0-tag1 ) (not (P1-activate-sensor-at-p1-4-h1-KW-tag0-tag1 )) 
	(when (and (KWGivengood r2 tag0) (Givengood r2 tag0) (KWGivengood r2 tag1) (Givengood r2 tag1)) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r2 tag0) (not (Givengood r2 tag0)) (KWGivengood r2 tag1) (not (Givengood r2 tag1))) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p1-4-h1-KW-tag0-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p1-4-h1-KW-tag0-tag1 )
:effect (and (not (P2-activate-sensor-at-p1-4-h1-KW-tag0-tag1 )) (NotInAction ) 
	(when (Givengood r2 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (Givengood r2 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r2 tag0)) (and (not (Givengood-rocks-in-range tag0)))) 
	(when (not (Givengood r2 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p1-4-h1-KW-tag0-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p1-4 tag0) (Givenantena-height h1 tag0) (KNot tag1 tag0) (NotInAction ))
:effect (and (P1-activate-sensor-at-p1-4-h1-KW-tag0 ) (not (NotInAction )) 
	(when (not (KWGivengood r2 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p1-4-h1-KW-tag0-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p1-4-h1-KW-tag0 )
:effect (and (P2-activate-sensor-at-p1-4-h1-KW-tag0 ) (not (P1-activate-sensor-at-p1-4-h1-KW-tag0 )) 
	(when (and (KWGivengood r2 tag0) (Givengood r2 tag0)) (and (KWGivengood-rocks-in-range tag0))) 
	(when (and (KWGivengood r2 tag0) (not (Givengood r2 tag0))) (and (KWGivengood-rocks-in-range tag0))))
)
(:action activate-sensor-at-p1-4-h1-KW-tag0-State
:parameters ()
:precondition (P2-activate-sensor-at-p1-4-h1-KW-tag0 )
:effect (and (not (P2-activate-sensor-at-p1-4-h1-KW-tag0 )) (NotInAction ) 
	(when (Givengood r2 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (not (Givengood r2 tag0)) (and (not (Givengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p1-4-h1-KW-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p1-4 tag1) (Givenantena-height h1 tag1) (KNot tag0 tag1) (NotInAction ))
:effect (and (P1-activate-sensor-at-p1-4-h1-KW-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r2 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p1-4-h1-KW-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p1-4-h1-KW-tag1 )
:effect (and (P2-activate-sensor-at-p1-4-h1-KW-tag1 ) (not (P1-activate-sensor-at-p1-4-h1-KW-tag1 )) 
	(when (and (KWGivengood r2 tag1) (Givengood r2 tag1)) (and (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r2 tag1) (not (Givengood r2 tag1))) (and (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p1-4-h1-KW-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p1-4-h1-KW-tag1 )
:effect (and (not (P2-activate-sensor-at-p1-4-h1-KW-tag1 )) (NotInAction ) 
	(when (Givengood r2 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r2 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p1-8-h1-KW-tag0-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p1-8 tag0) (Givenantena-height h1 tag0) (Givenagent-at p1-8 tag1) (Givenantena-height h1 tag1) (not (KNot tag1 tag0)) (NotInAction ))
:effect (and (P1-activate-sensor-at-p1-8-h1-KW-tag0-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r1 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r1 tag1)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r1 tag0)) (and (not (KWGivengood-rocks-in-range tag1)))) 
	(when (not (KWGivengood r1 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p1-8-h1-KW-tag0-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p1-8-h1-KW-tag0-tag1 )
:effect (and (P2-activate-sensor-at-p1-8-h1-KW-tag0-tag1 ) (not (P1-activate-sensor-at-p1-8-h1-KW-tag0-tag1 )) 
	(when (and (KWGivengood r1 tag0) (Givengood r1 tag0) (KWGivengood r1 tag1) (Givengood r1 tag1)) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r1 tag0) (not (Givengood r1 tag0)) (KWGivengood r1 tag1) (not (Givengood r1 tag1))) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p1-8-h1-KW-tag0-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p1-8-h1-KW-tag0-tag1 )
:effect (and (not (P2-activate-sensor-at-p1-8-h1-KW-tag0-tag1 )) (NotInAction ) 
	(when (Givengood r1 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (Givengood r1 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r1 tag0)) (and (not (Givengood-rocks-in-range tag0)))) 
	(when (not (Givengood r1 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p1-8-h1-KW-tag0-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p1-8 tag0) (Givenantena-height h1 tag0) (KNot tag1 tag0) (NotInAction ))
:effect (and (P1-activate-sensor-at-p1-8-h1-KW-tag0 ) (not (NotInAction )) 
	(when (not (KWGivengood r1 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p1-8-h1-KW-tag0-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p1-8-h1-KW-tag0 )
:effect (and (P2-activate-sensor-at-p1-8-h1-KW-tag0 ) (not (P1-activate-sensor-at-p1-8-h1-KW-tag0 )) 
	(when (and (KWGivengood r1 tag0) (Givengood r1 tag0)) (and (KWGivengood-rocks-in-range tag0))) 
	(when (and (KWGivengood r1 tag0) (not (Givengood r1 tag0))) (and (KWGivengood-rocks-in-range tag0))))
)
(:action activate-sensor-at-p1-8-h1-KW-tag0-State
:parameters ()
:precondition (P2-activate-sensor-at-p1-8-h1-KW-tag0 )
:effect (and (not (P2-activate-sensor-at-p1-8-h1-KW-tag0 )) (NotInAction ) 
	(when (Givengood r1 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (not (Givengood r1 tag0)) (and (not (Givengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p1-8-h1-KW-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p1-8 tag1) (Givenantena-height h1 tag1) (KNot tag0 tag1) (NotInAction ))
:effect (and (P1-activate-sensor-at-p1-8-h1-KW-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r1 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p1-8-h1-KW-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p1-8-h1-KW-tag1 )
:effect (and (P2-activate-sensor-at-p1-8-h1-KW-tag1 ) (not (P1-activate-sensor-at-p1-8-h1-KW-tag1 )) 
	(when (and (KWGivengood r1 tag1) (Givengood r1 tag1)) (and (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r1 tag1) (not (Givengood r1 tag1))) (and (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p1-8-h1-KW-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p1-8-h1-KW-tag1 )
:effect (and (not (P2-activate-sensor-at-p1-8-h1-KW-tag1 )) (NotInAction ) 
	(when (Givengood r1 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r1 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p2-1-h0-KW-tag0-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p2-1 tag0) (Givenantena-height h0 tag0) (Givenagent-at p2-1 tag1) (Givenantena-height h0 tag1) (not (KNot tag1 tag0)) (NotInAction ))
:effect (and (P1-activate-sensor-at-p2-1-h0-KW-tag0-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r3 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r3 tag1)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r3 tag0)) (and (not (KWGivengood-rocks-in-range tag1)))) 
	(when (not (KWGivengood r3 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p2-1-h0-KW-tag0-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p2-1-h0-KW-tag0-tag1 )
:effect (and (P2-activate-sensor-at-p2-1-h0-KW-tag0-tag1 ) (not (P1-activate-sensor-at-p2-1-h0-KW-tag0-tag1 )) 
	(when (and (KWGivengood r3 tag0) (Givengood r3 tag0) (KWGivengood r3 tag1) (Givengood r3 tag1)) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r3 tag0) (not (Givengood r3 tag0)) (KWGivengood r3 tag1) (not (Givengood r3 tag1))) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p2-1-h0-KW-tag0-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p2-1-h0-KW-tag0-tag1 )
:effect (and (not (P2-activate-sensor-at-p2-1-h0-KW-tag0-tag1 )) (NotInAction ) 
	(when (Givengood r3 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (Givengood r3 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r3 tag0)) (and (not (Givengood-rocks-in-range tag0)))) 
	(when (not (Givengood r3 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p2-1-h0-KW-tag0-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p2-1 tag0) (Givenantena-height h0 tag0) (KNot tag1 tag0) (NotInAction ))
:effect (and (P1-activate-sensor-at-p2-1-h0-KW-tag0 ) (not (NotInAction )) 
	(when (not (KWGivengood r3 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p2-1-h0-KW-tag0-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p2-1-h0-KW-tag0 )
:effect (and (P2-activate-sensor-at-p2-1-h0-KW-tag0 ) (not (P1-activate-sensor-at-p2-1-h0-KW-tag0 )) 
	(when (and (KWGivengood r3 tag0) (Givengood r3 tag0)) (and (KWGivengood-rocks-in-range tag0))) 
	(when (and (KWGivengood r3 tag0) (not (Givengood r3 tag0))) (and (KWGivengood-rocks-in-range tag0))))
)
(:action activate-sensor-at-p2-1-h0-KW-tag0-State
:parameters ()
:precondition (P2-activate-sensor-at-p2-1-h0-KW-tag0 )
:effect (and (not (P2-activate-sensor-at-p2-1-h0-KW-tag0 )) (NotInAction ) 
	(when (Givengood r3 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (not (Givengood r3 tag0)) (and (not (Givengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p2-1-h0-KW-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p2-1 tag1) (Givenantena-height h0 tag1) (KNot tag0 tag1) (NotInAction ))
:effect (and (P1-activate-sensor-at-p2-1-h0-KW-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r3 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p2-1-h0-KW-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p2-1-h0-KW-tag1 )
:effect (and (P2-activate-sensor-at-p2-1-h0-KW-tag1 ) (not (P1-activate-sensor-at-p2-1-h0-KW-tag1 )) 
	(when (and (KWGivengood r3 tag1) (Givengood r3 tag1)) (and (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r3 tag1) (not (Givengood r3 tag1))) (and (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p2-1-h0-KW-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p2-1-h0-KW-tag1 )
:effect (and (not (P2-activate-sensor-at-p2-1-h0-KW-tag1 )) (NotInAction ) 
	(when (Givengood r3 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r3 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p2-1-h1-KW-tag0-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p2-1 tag0) (Givenantena-height h1 tag0) (Givenagent-at p2-1 tag1) (Givenantena-height h1 tag1) (not (KNot tag1 tag0)) (NotInAction ))
:effect (and (P1-activate-sensor-at-p2-1-h1-KW-tag0-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r3 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r3 tag1)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r3 tag0)) (and (not (KWGivengood-rocks-in-range tag1)))) 
	(when (not (KWGivengood r3 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p2-1-h1-KW-tag0-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p2-1-h1-KW-tag0-tag1 )
:effect (and (P2-activate-sensor-at-p2-1-h1-KW-tag0-tag1 ) (not (P1-activate-sensor-at-p2-1-h1-KW-tag0-tag1 )) 
	(when (and (KWGivengood r3 tag0) (Givengood r3 tag0) (KWGivengood r3 tag1) (Givengood r3 tag1)) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r3 tag0) (not (Givengood r3 tag0)) (KWGivengood r3 tag1) (not (Givengood r3 tag1))) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p2-1-h1-KW-tag0-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p2-1-h1-KW-tag0-tag1 )
:effect (and (not (P2-activate-sensor-at-p2-1-h1-KW-tag0-tag1 )) (NotInAction ) 
	(when (Givengood r3 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (Givengood r3 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r3 tag0)) (and (not (Givengood-rocks-in-range tag0)))) 
	(when (not (Givengood r3 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p2-1-h1-KW-tag0-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p2-1 tag0) (Givenantena-height h1 tag0) (KNot tag1 tag0) (NotInAction ))
:effect (and (P1-activate-sensor-at-p2-1-h1-KW-tag0 ) (not (NotInAction )) 
	(when (not (KWGivengood r3 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p2-1-h1-KW-tag0-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p2-1-h1-KW-tag0 )
:effect (and (P2-activate-sensor-at-p2-1-h1-KW-tag0 ) (not (P1-activate-sensor-at-p2-1-h1-KW-tag0 )) 
	(when (and (KWGivengood r3 tag0) (Givengood r3 tag0)) (and (KWGivengood-rocks-in-range tag0))) 
	(when (and (KWGivengood r3 tag0) (not (Givengood r3 tag0))) (and (KWGivengood-rocks-in-range tag0))))
)
(:action activate-sensor-at-p2-1-h1-KW-tag0-State
:parameters ()
:precondition (P2-activate-sensor-at-p2-1-h1-KW-tag0 )
:effect (and (not (P2-activate-sensor-at-p2-1-h1-KW-tag0 )) (NotInAction ) 
	(when (Givengood r3 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (not (Givengood r3 tag0)) (and (not (Givengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p2-1-h1-KW-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p2-1 tag1) (Givenantena-height h1 tag1) (KNot tag0 tag1) (NotInAction ))
:effect (and (P1-activate-sensor-at-p2-1-h1-KW-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r3 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p2-1-h1-KW-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p2-1-h1-KW-tag1 )
:effect (and (P2-activate-sensor-at-p2-1-h1-KW-tag1 ) (not (P1-activate-sensor-at-p2-1-h1-KW-tag1 )) 
	(when (and (KWGivengood r3 tag1) (Givengood r3 tag1)) (and (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r3 tag1) (not (Givengood r3 tag1))) (and (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p2-1-h1-KW-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p2-1-h1-KW-tag1 )
:effect (and (not (P2-activate-sensor-at-p2-1-h1-KW-tag1 )) (NotInAction ) 
	(when (Givengood r3 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r3 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p2-2-h1-KW-tag0-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p2-2 tag0) (Givenantena-height h1 tag0) (Givenagent-at p2-2 tag1) (Givenantena-height h1 tag1) (not (KNot tag1 tag0)) (NotInAction ))
:effect (and (P1-activate-sensor-at-p2-2-h1-KW-tag0-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r3 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r3 tag1)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r3 tag0)) (and (not (KWGivengood-rocks-in-range tag1)))) 
	(when (not (KWGivengood r3 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p2-2-h1-KW-tag0-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p2-2-h1-KW-tag0-tag1 )
:effect (and (P2-activate-sensor-at-p2-2-h1-KW-tag0-tag1 ) (not (P1-activate-sensor-at-p2-2-h1-KW-tag0-tag1 )) 
	(when (and (KWGivengood r3 tag0) (Givengood r3 tag0) (KWGivengood r3 tag1) (Givengood r3 tag1)) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r3 tag0) (not (Givengood r3 tag0)) (KWGivengood r3 tag1) (not (Givengood r3 tag1))) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p2-2-h1-KW-tag0-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p2-2-h1-KW-tag0-tag1 )
:effect (and (not (P2-activate-sensor-at-p2-2-h1-KW-tag0-tag1 )) (NotInAction ) 
	(when (Givengood r3 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (Givengood r3 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r3 tag0)) (and (not (Givengood-rocks-in-range tag0)))) 
	(when (not (Givengood r3 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p2-2-h1-KW-tag0-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p2-2 tag0) (Givenantena-height h1 tag0) (KNot tag1 tag0) (NotInAction ))
:effect (and (P1-activate-sensor-at-p2-2-h1-KW-tag0 ) (not (NotInAction )) 
	(when (not (KWGivengood r3 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p2-2-h1-KW-tag0-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p2-2-h1-KW-tag0 )
:effect (and (P2-activate-sensor-at-p2-2-h1-KW-tag0 ) (not (P1-activate-sensor-at-p2-2-h1-KW-tag0 )) 
	(when (and (KWGivengood r3 tag0) (Givengood r3 tag0)) (and (KWGivengood-rocks-in-range tag0))) 
	(when (and (KWGivengood r3 tag0) (not (Givengood r3 tag0))) (and (KWGivengood-rocks-in-range tag0))))
)
(:action activate-sensor-at-p2-2-h1-KW-tag0-State
:parameters ()
:precondition (P2-activate-sensor-at-p2-2-h1-KW-tag0 )
:effect (and (not (P2-activate-sensor-at-p2-2-h1-KW-tag0 )) (NotInAction ) 
	(when (Givengood r3 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (not (Givengood r3 tag0)) (and (not (Givengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p2-2-h1-KW-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p2-2 tag1) (Givenantena-height h1 tag1) (KNot tag0 tag1) (NotInAction ))
:effect (and (P1-activate-sensor-at-p2-2-h1-KW-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r3 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p2-2-h1-KW-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p2-2-h1-KW-tag1 )
:effect (and (P2-activate-sensor-at-p2-2-h1-KW-tag1 ) (not (P1-activate-sensor-at-p2-2-h1-KW-tag1 )) 
	(when (and (KWGivengood r3 tag1) (Givengood r3 tag1)) (and (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r3 tag1) (not (Givengood r3 tag1))) (and (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p2-2-h1-KW-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p2-2-h1-KW-tag1 )
:effect (and (not (P2-activate-sensor-at-p2-2-h1-KW-tag1 )) (NotInAction ) 
	(when (Givengood r3 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r3 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p2-3-h1-KW-tag0-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p2-3 tag0) (Givenantena-height h1 tag0) (Givenagent-at p2-3 tag1) (Givenantena-height h1 tag1) (not (KNot tag1 tag0)) (NotInAction ))
:effect (and (P1-activate-sensor-at-p2-3-h1-KW-tag0-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r2 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r2 tag1)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r2 tag0)) (and (not (KWGivengood-rocks-in-range tag1)))) 
	(when (not (KWGivengood r2 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p2-3-h1-KW-tag0-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p2-3-h1-KW-tag0-tag1 )
:effect (and (P2-activate-sensor-at-p2-3-h1-KW-tag0-tag1 ) (not (P1-activate-sensor-at-p2-3-h1-KW-tag0-tag1 )) 
	(when (and (KWGivengood r2 tag0) (Givengood r2 tag0) (KWGivengood r2 tag1) (Givengood r2 tag1)) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r2 tag0) (not (Givengood r2 tag0)) (KWGivengood r2 tag1) (not (Givengood r2 tag1))) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p2-3-h1-KW-tag0-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p2-3-h1-KW-tag0-tag1 )
:effect (and (not (P2-activate-sensor-at-p2-3-h1-KW-tag0-tag1 )) (NotInAction ) 
	(when (Givengood r2 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (Givengood r2 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r2 tag0)) (and (not (Givengood-rocks-in-range tag0)))) 
	(when (not (Givengood r2 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p2-3-h1-KW-tag0-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p2-3 tag0) (Givenantena-height h1 tag0) (KNot tag1 tag0) (NotInAction ))
:effect (and (P1-activate-sensor-at-p2-3-h1-KW-tag0 ) (not (NotInAction )) 
	(when (not (KWGivengood r2 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p2-3-h1-KW-tag0-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p2-3-h1-KW-tag0 )
:effect (and (P2-activate-sensor-at-p2-3-h1-KW-tag0 ) (not (P1-activate-sensor-at-p2-3-h1-KW-tag0 )) 
	(when (and (KWGivengood r2 tag0) (Givengood r2 tag0)) (and (KWGivengood-rocks-in-range tag0))) 
	(when (and (KWGivengood r2 tag0) (not (Givengood r2 tag0))) (and (KWGivengood-rocks-in-range tag0))))
)
(:action activate-sensor-at-p2-3-h1-KW-tag0-State
:parameters ()
:precondition (P2-activate-sensor-at-p2-3-h1-KW-tag0 )
:effect (and (not (P2-activate-sensor-at-p2-3-h1-KW-tag0 )) (NotInAction ) 
	(when (Givengood r2 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (not (Givengood r2 tag0)) (and (not (Givengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p2-3-h1-KW-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p2-3 tag1) (Givenantena-height h1 tag1) (KNot tag0 tag1) (NotInAction ))
:effect (and (P1-activate-sensor-at-p2-3-h1-KW-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r2 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p2-3-h1-KW-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p2-3-h1-KW-tag1 )
:effect (and (P2-activate-sensor-at-p2-3-h1-KW-tag1 ) (not (P1-activate-sensor-at-p2-3-h1-KW-tag1 )) 
	(when (and (KWGivengood r2 tag1) (Givengood r2 tag1)) (and (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r2 tag1) (not (Givengood r2 tag1))) (and (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p2-3-h1-KW-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p2-3-h1-KW-tag1 )
:effect (and (not (P2-activate-sensor-at-p2-3-h1-KW-tag1 )) (NotInAction ) 
	(when (Givengood r2 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r2 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p2-7-h1-KW-tag0-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p2-7 tag0) (Givenantena-height h1 tag0) (Givenagent-at p2-7 tag1) (Givenantena-height h1 tag1) (not (KNot tag1 tag0)) (NotInAction ))
:effect (and (P1-activate-sensor-at-p2-7-h1-KW-tag0-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r1 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r1 tag1)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r1 tag0)) (and (not (KWGivengood-rocks-in-range tag1)))) 
	(when (not (KWGivengood r1 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p2-7-h1-KW-tag0-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p2-7-h1-KW-tag0-tag1 )
:effect (and (P2-activate-sensor-at-p2-7-h1-KW-tag0-tag1 ) (not (P1-activate-sensor-at-p2-7-h1-KW-tag0-tag1 )) 
	(when (and (KWGivengood r1 tag0) (Givengood r1 tag0) (KWGivengood r1 tag1) (Givengood r1 tag1)) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r1 tag0) (not (Givengood r1 tag0)) (KWGivengood r1 tag1) (not (Givengood r1 tag1))) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p2-7-h1-KW-tag0-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p2-7-h1-KW-tag0-tag1 )
:effect (and (not (P2-activate-sensor-at-p2-7-h1-KW-tag0-tag1 )) (NotInAction ) 
	(when (Givengood r1 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (Givengood r1 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r1 tag0)) (and (not (Givengood-rocks-in-range tag0)))) 
	(when (not (Givengood r1 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p2-7-h1-KW-tag0-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p2-7 tag0) (Givenantena-height h1 tag0) (KNot tag1 tag0) (NotInAction ))
:effect (and (P1-activate-sensor-at-p2-7-h1-KW-tag0 ) (not (NotInAction )) 
	(when (not (KWGivengood r1 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p2-7-h1-KW-tag0-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p2-7-h1-KW-tag0 )
:effect (and (P2-activate-sensor-at-p2-7-h1-KW-tag0 ) (not (P1-activate-sensor-at-p2-7-h1-KW-tag0 )) 
	(when (and (KWGivengood r1 tag0) (Givengood r1 tag0)) (and (KWGivengood-rocks-in-range tag0))) 
	(when (and (KWGivengood r1 tag0) (not (Givengood r1 tag0))) (and (KWGivengood-rocks-in-range tag0))))
)
(:action activate-sensor-at-p2-7-h1-KW-tag0-State
:parameters ()
:precondition (P2-activate-sensor-at-p2-7-h1-KW-tag0 )
:effect (and (not (P2-activate-sensor-at-p2-7-h1-KW-tag0 )) (NotInAction ) 
	(when (Givengood r1 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (not (Givengood r1 tag0)) (and (not (Givengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p2-7-h1-KW-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p2-7 tag1) (Givenantena-height h1 tag1) (KNot tag0 tag1) (NotInAction ))
:effect (and (P1-activate-sensor-at-p2-7-h1-KW-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r1 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p2-7-h1-KW-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p2-7-h1-KW-tag1 )
:effect (and (P2-activate-sensor-at-p2-7-h1-KW-tag1 ) (not (P1-activate-sensor-at-p2-7-h1-KW-tag1 )) 
	(when (and (KWGivengood r1 tag1) (Givengood r1 tag1)) (and (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r1 tag1) (not (Givengood r1 tag1))) (and (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p2-7-h1-KW-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p2-7-h1-KW-tag1 )
:effect (and (not (P2-activate-sensor-at-p2-7-h1-KW-tag1 )) (NotInAction ) 
	(when (Givengood r1 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r1 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p2-8-h0-KW-tag0-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p2-8 tag0) (Givenantena-height h0 tag0) (Givenagent-at p2-8 tag1) (Givenantena-height h0 tag1) (not (KNot tag1 tag0)) (NotInAction ))
:effect (and (P1-activate-sensor-at-p2-8-h0-KW-tag0-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r1 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r1 tag1)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r1 tag0)) (and (not (KWGivengood-rocks-in-range tag1)))) 
	(when (not (KWGivengood r1 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p2-8-h0-KW-tag0-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p2-8-h0-KW-tag0-tag1 )
:effect (and (P2-activate-sensor-at-p2-8-h0-KW-tag0-tag1 ) (not (P1-activate-sensor-at-p2-8-h0-KW-tag0-tag1 )) 
	(when (and (KWGivengood r1 tag0) (Givengood r1 tag0) (KWGivengood r1 tag1) (Givengood r1 tag1)) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r1 tag0) (not (Givengood r1 tag0)) (KWGivengood r1 tag1) (not (Givengood r1 tag1))) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p2-8-h0-KW-tag0-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p2-8-h0-KW-tag0-tag1 )
:effect (and (not (P2-activate-sensor-at-p2-8-h0-KW-tag0-tag1 )) (NotInAction ) 
	(when (Givengood r1 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (Givengood r1 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r1 tag0)) (and (not (Givengood-rocks-in-range tag0)))) 
	(when (not (Givengood r1 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p2-8-h0-KW-tag0-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p2-8 tag0) (Givenantena-height h0 tag0) (KNot tag1 tag0) (NotInAction ))
:effect (and (P1-activate-sensor-at-p2-8-h0-KW-tag0 ) (not (NotInAction )) 
	(when (not (KWGivengood r1 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p2-8-h0-KW-tag0-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p2-8-h0-KW-tag0 )
:effect (and (P2-activate-sensor-at-p2-8-h0-KW-tag0 ) (not (P1-activate-sensor-at-p2-8-h0-KW-tag0 )) 
	(when (and (KWGivengood r1 tag0) (Givengood r1 tag0)) (and (KWGivengood-rocks-in-range tag0))) 
	(when (and (KWGivengood r1 tag0) (not (Givengood r1 tag0))) (and (KWGivengood-rocks-in-range tag0))))
)
(:action activate-sensor-at-p2-8-h0-KW-tag0-State
:parameters ()
:precondition (P2-activate-sensor-at-p2-8-h0-KW-tag0 )
:effect (and (not (P2-activate-sensor-at-p2-8-h0-KW-tag0 )) (NotInAction ) 
	(when (Givengood r1 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (not (Givengood r1 tag0)) (and (not (Givengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p2-8-h0-KW-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p2-8 tag1) (Givenantena-height h0 tag1) (KNot tag0 tag1) (NotInAction ))
:effect (and (P1-activate-sensor-at-p2-8-h0-KW-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r1 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p2-8-h0-KW-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p2-8-h0-KW-tag1 )
:effect (and (P2-activate-sensor-at-p2-8-h0-KW-tag1 ) (not (P1-activate-sensor-at-p2-8-h0-KW-tag1 )) 
	(when (and (KWGivengood r1 tag1) (Givengood r1 tag1)) (and (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r1 tag1) (not (Givengood r1 tag1))) (and (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p2-8-h0-KW-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p2-8-h0-KW-tag1 )
:effect (and (not (P2-activate-sensor-at-p2-8-h0-KW-tag1 )) (NotInAction ) 
	(when (Givengood r1 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r1 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p2-8-h1-KW-tag0-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p2-8 tag0) (Givenantena-height h1 tag0) (Givenagent-at p2-8 tag1) (Givenantena-height h1 tag1) (not (KNot tag1 tag0)) (NotInAction ))
:effect (and (P1-activate-sensor-at-p2-8-h1-KW-tag0-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r1 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r1 tag1)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r1 tag0)) (and (not (KWGivengood-rocks-in-range tag1)))) 
	(when (not (KWGivengood r1 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p2-8-h1-KW-tag0-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p2-8-h1-KW-tag0-tag1 )
:effect (and (P2-activate-sensor-at-p2-8-h1-KW-tag0-tag1 ) (not (P1-activate-sensor-at-p2-8-h1-KW-tag0-tag1 )) 
	(when (and (KWGivengood r1 tag0) (Givengood r1 tag0) (KWGivengood r1 tag1) (Givengood r1 tag1)) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r1 tag0) (not (Givengood r1 tag0)) (KWGivengood r1 tag1) (not (Givengood r1 tag1))) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p2-8-h1-KW-tag0-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p2-8-h1-KW-tag0-tag1 )
:effect (and (not (P2-activate-sensor-at-p2-8-h1-KW-tag0-tag1 )) (NotInAction ) 
	(when (Givengood r1 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (Givengood r1 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r1 tag0)) (and (not (Givengood-rocks-in-range tag0)))) 
	(when (not (Givengood r1 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p2-8-h1-KW-tag0-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p2-8 tag0) (Givenantena-height h1 tag0) (KNot tag1 tag0) (NotInAction ))
:effect (and (P1-activate-sensor-at-p2-8-h1-KW-tag0 ) (not (NotInAction )) 
	(when (not (KWGivengood r1 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p2-8-h1-KW-tag0-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p2-8-h1-KW-tag0 )
:effect (and (P2-activate-sensor-at-p2-8-h1-KW-tag0 ) (not (P1-activate-sensor-at-p2-8-h1-KW-tag0 )) 
	(when (and (KWGivengood r1 tag0) (Givengood r1 tag0)) (and (KWGivengood-rocks-in-range tag0))) 
	(when (and (KWGivengood r1 tag0) (not (Givengood r1 tag0))) (and (KWGivengood-rocks-in-range tag0))))
)
(:action activate-sensor-at-p2-8-h1-KW-tag0-State
:parameters ()
:precondition (P2-activate-sensor-at-p2-8-h1-KW-tag0 )
:effect (and (not (P2-activate-sensor-at-p2-8-h1-KW-tag0 )) (NotInAction ) 
	(when (Givengood r1 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (not (Givengood r1 tag0)) (and (not (Givengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p2-8-h1-KW-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p2-8 tag1) (Givenantena-height h1 tag1) (KNot tag0 tag1) (NotInAction ))
:effect (and (P1-activate-sensor-at-p2-8-h1-KW-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r1 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p2-8-h1-KW-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p2-8-h1-KW-tag1 )
:effect (and (P2-activate-sensor-at-p2-8-h1-KW-tag1 ) (not (P1-activate-sensor-at-p2-8-h1-KW-tag1 )) 
	(when (and (KWGivengood r1 tag1) (Givengood r1 tag1)) (and (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r1 tag1) (not (Givengood r1 tag1))) (and (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p2-8-h1-KW-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p2-8-h1-KW-tag1 )
:effect (and (not (P2-activate-sensor-at-p2-8-h1-KW-tag1 )) (NotInAction ) 
	(when (Givengood r1 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r1 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p3-1-h1-KW-tag0-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p3-1 tag0) (Givenantena-height h1 tag0) (Givenagent-at p3-1 tag1) (Givenantena-height h1 tag1) (not (KNot tag1 tag0)) (NotInAction ))
:effect (and (P1-activate-sensor-at-p3-1-h1-KW-tag0-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r3 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r3 tag1)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r3 tag0)) (and (not (KWGivengood-rocks-in-range tag1)))) 
	(when (not (KWGivengood r3 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p3-1-h1-KW-tag0-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p3-1-h1-KW-tag0-tag1 )
:effect (and (P2-activate-sensor-at-p3-1-h1-KW-tag0-tag1 ) (not (P1-activate-sensor-at-p3-1-h1-KW-tag0-tag1 )) 
	(when (and (KWGivengood r3 tag0) (Givengood r3 tag0) (KWGivengood r3 tag1) (Givengood r3 tag1)) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r3 tag0) (not (Givengood r3 tag0)) (KWGivengood r3 tag1) (not (Givengood r3 tag1))) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p3-1-h1-KW-tag0-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p3-1-h1-KW-tag0-tag1 )
:effect (and (not (P2-activate-sensor-at-p3-1-h1-KW-tag0-tag1 )) (NotInAction ) 
	(when (Givengood r3 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (Givengood r3 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r3 tag0)) (and (not (Givengood-rocks-in-range tag0)))) 
	(when (not (Givengood r3 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p3-1-h1-KW-tag0-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p3-1 tag0) (Givenantena-height h1 tag0) (KNot tag1 tag0) (NotInAction ))
:effect (and (P1-activate-sensor-at-p3-1-h1-KW-tag0 ) (not (NotInAction )) 
	(when (not (KWGivengood r3 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p3-1-h1-KW-tag0-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p3-1-h1-KW-tag0 )
:effect (and (P2-activate-sensor-at-p3-1-h1-KW-tag0 ) (not (P1-activate-sensor-at-p3-1-h1-KW-tag0 )) 
	(when (and (KWGivengood r3 tag0) (Givengood r3 tag0)) (and (KWGivengood-rocks-in-range tag0))) 
	(when (and (KWGivengood r3 tag0) (not (Givengood r3 tag0))) (and (KWGivengood-rocks-in-range tag0))))
)
(:action activate-sensor-at-p3-1-h1-KW-tag0-State
:parameters ()
:precondition (P2-activate-sensor-at-p3-1-h1-KW-tag0 )
:effect (and (not (P2-activate-sensor-at-p3-1-h1-KW-tag0 )) (NotInAction ) 
	(when (Givengood r3 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (not (Givengood r3 tag0)) (and (not (Givengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p3-1-h1-KW-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p3-1 tag1) (Givenantena-height h1 tag1) (KNot tag0 tag1) (NotInAction ))
:effect (and (P1-activate-sensor-at-p3-1-h1-KW-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r3 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p3-1-h1-KW-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p3-1-h1-KW-tag1 )
:effect (and (P2-activate-sensor-at-p3-1-h1-KW-tag1 ) (not (P1-activate-sensor-at-p3-1-h1-KW-tag1 )) 
	(when (and (KWGivengood r3 tag1) (Givengood r3 tag1)) (and (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r3 tag1) (not (Givengood r3 tag1))) (and (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p3-1-h1-KW-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p3-1-h1-KW-tag1 )
:effect (and (not (P2-activate-sensor-at-p3-1-h1-KW-tag1 )) (NotInAction ) 
	(when (Givengood r3 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r3 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p3-8-h1-KW-tag0-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p3-8 tag0) (Givenantena-height h1 tag0) (Givenagent-at p3-8 tag1) (Givenantena-height h1 tag1) (not (KNot tag1 tag0)) (NotInAction ))
:effect (and (P1-activate-sensor-at-p3-8-h1-KW-tag0-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r1 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r1 tag1)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r1 tag0)) (and (not (KWGivengood-rocks-in-range tag1)))) 
	(when (not (KWGivengood r1 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p3-8-h1-KW-tag0-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p3-8-h1-KW-tag0-tag1 )
:effect (and (P2-activate-sensor-at-p3-8-h1-KW-tag0-tag1 ) (not (P1-activate-sensor-at-p3-8-h1-KW-tag0-tag1 )) 
	(when (and (KWGivengood r1 tag0) (Givengood r1 tag0) (KWGivengood r1 tag1) (Givengood r1 tag1)) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r1 tag0) (not (Givengood r1 tag0)) (KWGivengood r1 tag1) (not (Givengood r1 tag1))) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p3-8-h1-KW-tag0-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p3-8-h1-KW-tag0-tag1 )
:effect (and (not (P2-activate-sensor-at-p3-8-h1-KW-tag0-tag1 )) (NotInAction ) 
	(when (Givengood r1 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (Givengood r1 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r1 tag0)) (and (not (Givengood-rocks-in-range tag0)))) 
	(when (not (Givengood r1 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p3-8-h1-KW-tag0-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p3-8 tag0) (Givenantena-height h1 tag0) (KNot tag1 tag0) (NotInAction ))
:effect (and (P1-activate-sensor-at-p3-8-h1-KW-tag0 ) (not (NotInAction )) 
	(when (not (KWGivengood r1 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p3-8-h1-KW-tag0-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p3-8-h1-KW-tag0 )
:effect (and (P2-activate-sensor-at-p3-8-h1-KW-tag0 ) (not (P1-activate-sensor-at-p3-8-h1-KW-tag0 )) 
	(when (and (KWGivengood r1 tag0) (Givengood r1 tag0)) (and (KWGivengood-rocks-in-range tag0))) 
	(when (and (KWGivengood r1 tag0) (not (Givengood r1 tag0))) (and (KWGivengood-rocks-in-range tag0))))
)
(:action activate-sensor-at-p3-8-h1-KW-tag0-State
:parameters ()
:precondition (P2-activate-sensor-at-p3-8-h1-KW-tag0 )
:effect (and (not (P2-activate-sensor-at-p3-8-h1-KW-tag0 )) (NotInAction ) 
	(when (Givengood r1 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (not (Givengood r1 tag0)) (and (not (Givengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p3-8-h1-KW-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p3-8 tag1) (Givenantena-height h1 tag1) (KNot tag0 tag1) (NotInAction ))
:effect (and (P1-activate-sensor-at-p3-8-h1-KW-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r1 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p3-8-h1-KW-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p3-8-h1-KW-tag1 )
:effect (and (P2-activate-sensor-at-p3-8-h1-KW-tag1 ) (not (P1-activate-sensor-at-p3-8-h1-KW-tag1 )) 
	(when (and (KWGivengood r1 tag1) (Givengood r1 tag1)) (and (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r1 tag1) (not (Givengood r1 tag1))) (and (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p3-8-h1-KW-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p3-8-h1-KW-tag1 )
:effect (and (not (P2-activate-sensor-at-p3-8-h1-KW-tag1 )) (NotInAction ) 
	(when (Givengood r1 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r1 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p6-4-h1-KW-tag0-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p6-4 tag0) (Givenantena-height h1 tag0) (Givenagent-at p6-4 tag1) (Givenantena-height h1 tag1) (not (KNot tag1 tag0)) (NotInAction ))
:effect (and (P1-activate-sensor-at-p6-4-h1-KW-tag0-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r0 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r0 tag1)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r0 tag0)) (and (not (KWGivengood-rocks-in-range tag1)))) 
	(when (not (KWGivengood r0 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p6-4-h1-KW-tag0-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p6-4-h1-KW-tag0-tag1 )
:effect (and (P2-activate-sensor-at-p6-4-h1-KW-tag0-tag1 ) (not (P1-activate-sensor-at-p6-4-h1-KW-tag0-tag1 )) 
	(when (and (KWGivengood r0 tag0) (Givengood r0 tag0) (KWGivengood r0 tag1) (Givengood r0 tag1)) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r0 tag0) (not (Givengood r0 tag0)) (KWGivengood r0 tag1) (not (Givengood r0 tag1))) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p6-4-h1-KW-tag0-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p6-4-h1-KW-tag0-tag1 )
:effect (and (not (P2-activate-sensor-at-p6-4-h1-KW-tag0-tag1 )) (NotInAction ) 
	(when (Givengood r0 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (Givengood r0 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r0 tag0)) (and (not (Givengood-rocks-in-range tag0)))) 
	(when (not (Givengood r0 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p6-4-h1-KW-tag0-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p6-4 tag0) (Givenantena-height h1 tag0) (KNot tag1 tag0) (NotInAction ))
:effect (and (P1-activate-sensor-at-p6-4-h1-KW-tag0 ) (not (NotInAction )) 
	(when (not (KWGivengood r0 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p6-4-h1-KW-tag0-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p6-4-h1-KW-tag0 )
:effect (and (P2-activate-sensor-at-p6-4-h1-KW-tag0 ) (not (P1-activate-sensor-at-p6-4-h1-KW-tag0 )) 
	(when (and (KWGivengood r0 tag0) (Givengood r0 tag0)) (and (KWGivengood-rocks-in-range tag0))) 
	(when (and (KWGivengood r0 tag0) (not (Givengood r0 tag0))) (and (KWGivengood-rocks-in-range tag0))))
)
(:action activate-sensor-at-p6-4-h1-KW-tag0-State
:parameters ()
:precondition (P2-activate-sensor-at-p6-4-h1-KW-tag0 )
:effect (and (not (P2-activate-sensor-at-p6-4-h1-KW-tag0 )) (NotInAction ) 
	(when (Givengood r0 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (not (Givengood r0 tag0)) (and (not (Givengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p6-4-h1-KW-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p6-4 tag1) (Givenantena-height h1 tag1) (KNot tag0 tag1) (NotInAction ))
:effect (and (P1-activate-sensor-at-p6-4-h1-KW-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r0 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p6-4-h1-KW-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p6-4-h1-KW-tag1 )
:effect (and (P2-activate-sensor-at-p6-4-h1-KW-tag1 ) (not (P1-activate-sensor-at-p6-4-h1-KW-tag1 )) 
	(when (and (KWGivengood r0 tag1) (Givengood r0 tag1)) (and (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r0 tag1) (not (Givengood r0 tag1))) (and (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p6-4-h1-KW-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p6-4-h1-KW-tag1 )
:effect (and (not (P2-activate-sensor-at-p6-4-h1-KW-tag1 )) (NotInAction ) 
	(when (Givengood r0 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r0 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p7-3-h1-KW-tag0-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p7-3 tag0) (Givenantena-height h1 tag0) (Givenagent-at p7-3 tag1) (Givenantena-height h1 tag1) (not (KNot tag1 tag0)) (NotInAction ))
:effect (and (P1-activate-sensor-at-p7-3-h1-KW-tag0-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r0 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r0 tag1)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r0 tag0)) (and (not (KWGivengood-rocks-in-range tag1)))) 
	(when (not (KWGivengood r0 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p7-3-h1-KW-tag0-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p7-3-h1-KW-tag0-tag1 )
:effect (and (P2-activate-sensor-at-p7-3-h1-KW-tag0-tag1 ) (not (P1-activate-sensor-at-p7-3-h1-KW-tag0-tag1 )) 
	(when (and (KWGivengood r0 tag0) (Givengood r0 tag0) (KWGivengood r0 tag1) (Givengood r0 tag1)) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r0 tag0) (not (Givengood r0 tag0)) (KWGivengood r0 tag1) (not (Givengood r0 tag1))) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p7-3-h1-KW-tag0-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p7-3-h1-KW-tag0-tag1 )
:effect (and (not (P2-activate-sensor-at-p7-3-h1-KW-tag0-tag1 )) (NotInAction ) 
	(when (Givengood r0 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (Givengood r0 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r0 tag0)) (and (not (Givengood-rocks-in-range tag0)))) 
	(when (not (Givengood r0 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p7-3-h1-KW-tag0-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p7-3 tag0) (Givenantena-height h1 tag0) (KNot tag1 tag0) (NotInAction ))
:effect (and (P1-activate-sensor-at-p7-3-h1-KW-tag0 ) (not (NotInAction )) 
	(when (not (KWGivengood r0 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p7-3-h1-KW-tag0-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p7-3-h1-KW-tag0 )
:effect (and (P2-activate-sensor-at-p7-3-h1-KW-tag0 ) (not (P1-activate-sensor-at-p7-3-h1-KW-tag0 )) 
	(when (and (KWGivengood r0 tag0) (Givengood r0 tag0)) (and (KWGivengood-rocks-in-range tag0))) 
	(when (and (KWGivengood r0 tag0) (not (Givengood r0 tag0))) (and (KWGivengood-rocks-in-range tag0))))
)
(:action activate-sensor-at-p7-3-h1-KW-tag0-State
:parameters ()
:precondition (P2-activate-sensor-at-p7-3-h1-KW-tag0 )
:effect (and (not (P2-activate-sensor-at-p7-3-h1-KW-tag0 )) (NotInAction ) 
	(when (Givengood r0 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (not (Givengood r0 tag0)) (and (not (Givengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p7-3-h1-KW-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p7-3 tag1) (Givenantena-height h1 tag1) (KNot tag0 tag1) (NotInAction ))
:effect (and (P1-activate-sensor-at-p7-3-h1-KW-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r0 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p7-3-h1-KW-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p7-3-h1-KW-tag1 )
:effect (and (P2-activate-sensor-at-p7-3-h1-KW-tag1 ) (not (P1-activate-sensor-at-p7-3-h1-KW-tag1 )) 
	(when (and (KWGivengood r0 tag1) (Givengood r0 tag1)) (and (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r0 tag1) (not (Givengood r0 tag1))) (and (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p7-3-h1-KW-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p7-3-h1-KW-tag1 )
:effect (and (not (P2-activate-sensor-at-p7-3-h1-KW-tag1 )) (NotInAction ) 
	(when (Givengood r0 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r0 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p7-4-h0-KW-tag0-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p7-4 tag0) (Givenantena-height h0 tag0) (Givenagent-at p7-4 tag1) (Givenantena-height h0 tag1) (not (KNot tag1 tag0)) (NotInAction ))
:effect (and (P1-activate-sensor-at-p7-4-h0-KW-tag0-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r0 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r0 tag1)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r0 tag0)) (and (not (KWGivengood-rocks-in-range tag1)))) 
	(when (not (KWGivengood r0 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p7-4-h0-KW-tag0-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p7-4-h0-KW-tag0-tag1 )
:effect (and (P2-activate-sensor-at-p7-4-h0-KW-tag0-tag1 ) (not (P1-activate-sensor-at-p7-4-h0-KW-tag0-tag1 )) 
	(when (and (KWGivengood r0 tag0) (Givengood r0 tag0) (KWGivengood r0 tag1) (Givengood r0 tag1)) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r0 tag0) (not (Givengood r0 tag0)) (KWGivengood r0 tag1) (not (Givengood r0 tag1))) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p7-4-h0-KW-tag0-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p7-4-h0-KW-tag0-tag1 )
:effect (and (not (P2-activate-sensor-at-p7-4-h0-KW-tag0-tag1 )) (NotInAction ) 
	(when (Givengood r0 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (Givengood r0 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r0 tag0)) (and (not (Givengood-rocks-in-range tag0)))) 
	(when (not (Givengood r0 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p7-4-h0-KW-tag0-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p7-4 tag0) (Givenantena-height h0 tag0) (KNot tag1 tag0) (NotInAction ))
:effect (and (P1-activate-sensor-at-p7-4-h0-KW-tag0 ) (not (NotInAction )) 
	(when (not (KWGivengood r0 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p7-4-h0-KW-tag0-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p7-4-h0-KW-tag0 )
:effect (and (P2-activate-sensor-at-p7-4-h0-KW-tag0 ) (not (P1-activate-sensor-at-p7-4-h0-KW-tag0 )) 
	(when (and (KWGivengood r0 tag0) (Givengood r0 tag0)) (and (KWGivengood-rocks-in-range tag0))) 
	(when (and (KWGivengood r0 tag0) (not (Givengood r0 tag0))) (and (KWGivengood-rocks-in-range tag0))))
)
(:action activate-sensor-at-p7-4-h0-KW-tag0-State
:parameters ()
:precondition (P2-activate-sensor-at-p7-4-h0-KW-tag0 )
:effect (and (not (P2-activate-sensor-at-p7-4-h0-KW-tag0 )) (NotInAction ) 
	(when (Givengood r0 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (not (Givengood r0 tag0)) (and (not (Givengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p7-4-h0-KW-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p7-4 tag1) (Givenantena-height h0 tag1) (KNot tag0 tag1) (NotInAction ))
:effect (and (P1-activate-sensor-at-p7-4-h0-KW-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r0 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p7-4-h0-KW-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p7-4-h0-KW-tag1 )
:effect (and (P2-activate-sensor-at-p7-4-h0-KW-tag1 ) (not (P1-activate-sensor-at-p7-4-h0-KW-tag1 )) 
	(when (and (KWGivengood r0 tag1) (Givengood r0 tag1)) (and (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r0 tag1) (not (Givengood r0 tag1))) (and (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p7-4-h0-KW-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p7-4-h0-KW-tag1 )
:effect (and (not (P2-activate-sensor-at-p7-4-h0-KW-tag1 )) (NotInAction ) 
	(when (Givengood r0 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r0 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p7-4-h1-KW-tag0-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p7-4 tag0) (Givenantena-height h1 tag0) (Givenagent-at p7-4 tag1) (Givenantena-height h1 tag1) (not (KNot tag1 tag0)) (NotInAction ))
:effect (and (P1-activate-sensor-at-p7-4-h1-KW-tag0-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r0 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r0 tag1)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r0 tag0)) (and (not (KWGivengood-rocks-in-range tag1)))) 
	(when (not (KWGivengood r0 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p7-4-h1-KW-tag0-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p7-4-h1-KW-tag0-tag1 )
:effect (and (P2-activate-sensor-at-p7-4-h1-KW-tag0-tag1 ) (not (P1-activate-sensor-at-p7-4-h1-KW-tag0-tag1 )) 
	(when (and (KWGivengood r0 tag0) (Givengood r0 tag0) (KWGivengood r0 tag1) (Givengood r0 tag1)) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r0 tag0) (not (Givengood r0 tag0)) (KWGivengood r0 tag1) (not (Givengood r0 tag1))) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p7-4-h1-KW-tag0-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p7-4-h1-KW-tag0-tag1 )
:effect (and (not (P2-activate-sensor-at-p7-4-h1-KW-tag0-tag1 )) (NotInAction ) 
	(when (Givengood r0 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (Givengood r0 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r0 tag0)) (and (not (Givengood-rocks-in-range tag0)))) 
	(when (not (Givengood r0 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p7-4-h1-KW-tag0-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p7-4 tag0) (Givenantena-height h1 tag0) (KNot tag1 tag0) (NotInAction ))
:effect (and (P1-activate-sensor-at-p7-4-h1-KW-tag0 ) (not (NotInAction )) 
	(when (not (KWGivengood r0 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p7-4-h1-KW-tag0-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p7-4-h1-KW-tag0 )
:effect (and (P2-activate-sensor-at-p7-4-h1-KW-tag0 ) (not (P1-activate-sensor-at-p7-4-h1-KW-tag0 )) 
	(when (and (KWGivengood r0 tag0) (Givengood r0 tag0)) (and (KWGivengood-rocks-in-range tag0))) 
	(when (and (KWGivengood r0 tag0) (not (Givengood r0 tag0))) (and (KWGivengood-rocks-in-range tag0))))
)
(:action activate-sensor-at-p7-4-h1-KW-tag0-State
:parameters ()
:precondition (P2-activate-sensor-at-p7-4-h1-KW-tag0 )
:effect (and (not (P2-activate-sensor-at-p7-4-h1-KW-tag0 )) (NotInAction ) 
	(when (Givengood r0 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (not (Givengood r0 tag0)) (and (not (Givengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p7-4-h1-KW-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p7-4 tag1) (Givenantena-height h1 tag1) (KNot tag0 tag1) (NotInAction ))
:effect (and (P1-activate-sensor-at-p7-4-h1-KW-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r0 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p7-4-h1-KW-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p7-4-h1-KW-tag1 )
:effect (and (P2-activate-sensor-at-p7-4-h1-KW-tag1 ) (not (P1-activate-sensor-at-p7-4-h1-KW-tag1 )) 
	(when (and (KWGivengood r0 tag1) (Givengood r0 tag1)) (and (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r0 tag1) (not (Givengood r0 tag1))) (and (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p7-4-h1-KW-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p7-4-h1-KW-tag1 )
:effect (and (not (P2-activate-sensor-at-p7-4-h1-KW-tag1 )) (NotInAction ) 
	(when (Givengood r0 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r0 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p7-5-h1-KW-tag0-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p7-5 tag0) (Givenantena-height h1 tag0) (Givenagent-at p7-5 tag1) (Givenantena-height h1 tag1) (not (KNot tag1 tag0)) (NotInAction ))
:effect (and (P1-activate-sensor-at-p7-5-h1-KW-tag0-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r0 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r0 tag1)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r0 tag0)) (and (not (KWGivengood-rocks-in-range tag1)))) 
	(when (not (KWGivengood r0 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p7-5-h1-KW-tag0-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p7-5-h1-KW-tag0-tag1 )
:effect (and (P2-activate-sensor-at-p7-5-h1-KW-tag0-tag1 ) (not (P1-activate-sensor-at-p7-5-h1-KW-tag0-tag1 )) 
	(when (and (KWGivengood r0 tag0) (Givengood r0 tag0) (KWGivengood r0 tag1) (Givengood r0 tag1)) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r0 tag0) (not (Givengood r0 tag0)) (KWGivengood r0 tag1) (not (Givengood r0 tag1))) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p7-5-h1-KW-tag0-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p7-5-h1-KW-tag0-tag1 )
:effect (and (not (P2-activate-sensor-at-p7-5-h1-KW-tag0-tag1 )) (NotInAction ) 
	(when (Givengood r0 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (Givengood r0 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r0 tag0)) (and (not (Givengood-rocks-in-range tag0)))) 
	(when (not (Givengood r0 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p7-5-h1-KW-tag0-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p7-5 tag0) (Givenantena-height h1 tag0) (KNot tag1 tag0) (NotInAction ))
:effect (and (P1-activate-sensor-at-p7-5-h1-KW-tag0 ) (not (NotInAction )) 
	(when (not (KWGivengood r0 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p7-5-h1-KW-tag0-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p7-5-h1-KW-tag0 )
:effect (and (P2-activate-sensor-at-p7-5-h1-KW-tag0 ) (not (P1-activate-sensor-at-p7-5-h1-KW-tag0 )) 
	(when (and (KWGivengood r0 tag0) (Givengood r0 tag0)) (and (KWGivengood-rocks-in-range tag0))) 
	(when (and (KWGivengood r0 tag0) (not (Givengood r0 tag0))) (and (KWGivengood-rocks-in-range tag0))))
)
(:action activate-sensor-at-p7-5-h1-KW-tag0-State
:parameters ()
:precondition (P2-activate-sensor-at-p7-5-h1-KW-tag0 )
:effect (and (not (P2-activate-sensor-at-p7-5-h1-KW-tag0 )) (NotInAction ) 
	(when (Givengood r0 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (not (Givengood r0 tag0)) (and (not (Givengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p7-5-h1-KW-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p7-5 tag1) (Givenantena-height h1 tag1) (KNot tag0 tag1) (NotInAction ))
:effect (and (P1-activate-sensor-at-p7-5-h1-KW-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r0 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p7-5-h1-KW-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p7-5-h1-KW-tag1 )
:effect (and (P2-activate-sensor-at-p7-5-h1-KW-tag1 ) (not (P1-activate-sensor-at-p7-5-h1-KW-tag1 )) 
	(when (and (KWGivengood r0 tag1) (Givengood r0 tag1)) (and (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r0 tag1) (not (Givengood r0 tag1))) (and (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p7-5-h1-KW-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p7-5-h1-KW-tag1 )
:effect (and (not (P2-activate-sensor-at-p7-5-h1-KW-tag1 )) (NotInAction ) 
	(when (Givengood r0 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r0 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p8-4-h1-KW-tag0-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p8-4 tag0) (Givenantena-height h1 tag0) (Givenagent-at p8-4 tag1) (Givenantena-height h1 tag1) (not (KNot tag1 tag0)) (NotInAction ))
:effect (and (P1-activate-sensor-at-p8-4-h1-KW-tag0-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r0 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r0 tag1)) (and (not (KWGivengood-rocks-in-range tag0)))) 
	(when (not (KWGivengood r0 tag0)) (and (not (KWGivengood-rocks-in-range tag1)))) 
	(when (not (KWGivengood r0 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p8-4-h1-KW-tag0-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p8-4-h1-KW-tag0-tag1 )
:effect (and (P2-activate-sensor-at-p8-4-h1-KW-tag0-tag1 ) (not (P1-activate-sensor-at-p8-4-h1-KW-tag0-tag1 )) 
	(when (and (KWGivengood r0 tag0) (Givengood r0 tag0) (KWGivengood r0 tag1) (Givengood r0 tag1)) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r0 tag0) (not (Givengood r0 tag0)) (KWGivengood r0 tag1) (not (Givengood r0 tag1))) (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p8-4-h1-KW-tag0-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p8-4-h1-KW-tag0-tag1 )
:effect (and (not (P2-activate-sensor-at-p8-4-h1-KW-tag0-tag1 )) (NotInAction ) 
	(when (Givengood r0 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (Givengood r0 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r0 tag0)) (and (not (Givengood-rocks-in-range tag0)))) 
	(when (not (Givengood r0 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p8-4-h1-KW-tag0-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p8-4 tag0) (Givenantena-height h1 tag0) (KNot tag1 tag0) (NotInAction ))
:effect (and (P1-activate-sensor-at-p8-4-h1-KW-tag0 ) (not (NotInAction )) 
	(when (not (KWGivengood r0 tag0)) (and (not (KWGivengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p8-4-h1-KW-tag0-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p8-4-h1-KW-tag0 )
:effect (and (P2-activate-sensor-at-p8-4-h1-KW-tag0 ) (not (P1-activate-sensor-at-p8-4-h1-KW-tag0 )) 
	(when (and (KWGivengood r0 tag0) (Givengood r0 tag0)) (and (KWGivengood-rocks-in-range tag0))) 
	(when (and (KWGivengood r0 tag0) (not (Givengood r0 tag0))) (and (KWGivengood-rocks-in-range tag0))))
)
(:action activate-sensor-at-p8-4-h1-KW-tag0-State
:parameters ()
:precondition (P2-activate-sensor-at-p8-4-h1-KW-tag0 )
:effect (and (not (P2-activate-sensor-at-p8-4-h1-KW-tag0 )) (NotInAction ) 
	(when (Givengood r0 tag0) (and (Givengood-rocks-in-range tag0))) 
	(when (not (Givengood r0 tag0)) (and (not (Givengood-rocks-in-range tag0)))))
)
(:action activate-sensor-at-p8-4-h1-KW-tag1-KnowledgeLoss
:parameters ()
:precondition (and (Givenagent-at p8-4 tag1) (Givenantena-height h1 tag1) (KNot tag0 tag1) (NotInAction ))
:effect (and (P1-activate-sensor-at-p8-4-h1-KW-tag1 ) (not (NotInAction )) 
	(when (not (KWGivengood r0 tag1)) (and (not (KWGivengood-rocks-in-range tag1)))))
)
(:action activate-sensor-at-p8-4-h1-KW-tag1-KnowledgeGain
:parameters ()
:precondition (P1-activate-sensor-at-p8-4-h1-KW-tag1 )
:effect (and (P2-activate-sensor-at-p8-4-h1-KW-tag1 ) (not (P1-activate-sensor-at-p8-4-h1-KW-tag1 )) 
	(when (and (KWGivengood r0 tag1) (Givengood r0 tag1)) (and (KWGivengood-rocks-in-range tag1))) 
	(when (and (KWGivengood r0 tag1) (not (Givengood r0 tag1))) (and (KWGivengood-rocks-in-range tag1))))
)
(:action activate-sensor-at-p8-4-h1-KW-tag1-State
:parameters ()
:precondition (P2-activate-sensor-at-p8-4-h1-KW-tag1 )
:effect (and (not (P2-activate-sensor-at-p8-4-h1-KW-tag1 )) (NotInAction ) 
	(when (Givengood r0 tag1) (and (Givengood-rocks-in-range tag1))) 
	(when (not (Givengood r0 tag1)) (and (not (Givengood-rocks-in-range tag1)))))
)
(:action observe-sensor-KW-tag0-tag1
:parameters ()
:effect (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))
)
(:action observe-sensor-KW-tag0
:parameters ()
:precondition (and (KNot tag1 tag0))
:effect (and (KWGivengood-rocks-in-range tag0))
)
(:action observe-sensor-KW-tag1
:parameters ()
:precondition (and (KNot tag0 tag1))
:effect (and (KWGivengood-rocks-in-range tag1))
)

(:action TagMerge-good-tag0-tag1-T
:parameters ( ?r - ROCK)
:precondition (and (Givengood ?r tag0) (Givengood ?r tag1) (not (KNot tag1 tag0)) (NotInAction ))
:effect (and (KWGivengood ?r tag0) (KWGivengood ?r tag1))
)

(:action TagMerge-good-tag0-tag1-F
:parameters ( ?r - ROCK)
:precondition (and (not (Givengood ?r tag0)) (not (Givengood ?r tag1)) (not (KNot tag1 tag0)) (NotInAction ))
:effect (and (KWGivengood ?r tag0) (KWGivengood ?r tag1))
)

(:action TagMerge-good-tag0-T
:parameters ( ?r - ROCK)
:precondition (and (Givengood ?r tag0) (KNot tag1 tag0) (NotInAction ))
:effect (and (KWGivengood ?r tag0))
)

(:action TagMerge-good-tag0-F
:parameters ( ?r - ROCK)
:precondition (and (not (Givengood ?r tag0)) (KNot tag1 tag0) (NotInAction ))
:effect (and (KWGivengood ?r tag0))
)

(:action TagMerge-good-tag1-T
:parameters ( ?r - ROCK)
:precondition (and (Givengood ?r tag1) (KNot tag0 tag1) (NotInAction ))
:effect (and (KWGivengood ?r tag1))
)

(:action TagMerge-good-tag1-F
:parameters ( ?r - ROCK)
:precondition (and (not (Givengood ?r tag1)) (KNot tag0 tag1) (NotInAction ))
:effect (and (KWGivengood ?r tag1))
)

(:action TagMerge-good-rocks-in-range-tag0-tag1-T
:parameters ()
:precondition (and (Givengood-rocks-in-range tag0) (Givengood-rocks-in-range tag1) (not (KNot tag1 tag0)) (NotInAction ))
:effect (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))
)

(:action TagMerge-good-rocks-in-range-tag0-tag1-F
:parameters ()
:precondition (and (not (Givengood-rocks-in-range tag0)) (not (Givengood-rocks-in-range tag1)) (not (KNot tag1 tag0)) (NotInAction ))
:effect (and (KWGivengood-rocks-in-range tag0) (KWGivengood-rocks-in-range tag1))
)

(:action TagMerge-good-rocks-in-range-tag0-T
:parameters ()
:precondition (and (Givengood-rocks-in-range tag0) (KNot tag1 tag0) (NotInAction ))
:effect (and (KWGivengood-rocks-in-range tag0))
)

(:action TagMerge-good-rocks-in-range-tag0-F
:parameters ()
:precondition (and (not (Givengood-rocks-in-range tag0)) (KNot tag1 tag0) (NotInAction ))
:effect (and (KWGivengood-rocks-in-range tag0))
)

(:action TagMerge-good-rocks-in-range-tag1-T
:parameters ()
:precondition (and (Givengood-rocks-in-range tag1) (KNot tag0 tag1) (NotInAction ))
:effect (and (KWGivengood-rocks-in-range tag1))
)

(:action TagMerge-good-rocks-in-range-tag1-F
:parameters ()
:precondition (and (not (Givengood-rocks-in-range tag1)) (KNot tag0 tag1) (NotInAction ))
:effect (and (KWGivengood-rocks-in-range tag1))
)

(:action Refute-good-rocks-in-range
:parameters ( ?TAG_PARAM1 - TAG_TYPE ?TAG_PARAM2 - TAG_TYPE)
:precondition (and (Givengood-rocks-in-range ?TAG_PARAM1) (not (Givengood-rocks-in-range ?TAG_PARAM2)) (KWGivengood-rocks-in-range ?TAG_PARAM1) (KWGivengood-rocks-in-range ?TAG_PARAM2) (NotInAction ))
:effect (and (KNot ?TAG_PARAM1 ?TAG_PARAM2) (KNot ?TAG_PARAM2 ?TAG_PARAM1))
)

)
